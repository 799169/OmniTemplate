<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="io_8hpp" kind="file" language="C++">
    <compoundname>io.hpp</compoundname>
    <includes refid="core_8hpp" local="yes">core.hpp</includes>
    <includedby refid="core_8hpp" local="yes">/home/ram/OmniTemplate/core.hpp</includedby>
    <incdepgraph>
      <node id="3">
        <label>bits/stdc++.h</label>
      </node>
      <node id="6">
        <label>my_int.hpp</label>
        <link refid="my__int_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/ram/OmniTemplate/io.hpp</label>
        <link refid="io_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>experimental/source_location</label>
      </node>
      <node id="4">
        <label>experimental/iterator</label>
      </node>
      <node id="10">
        <label>utility.hpp</label>
        <link refid="utility_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>debug.hpp</label>
        <link refid="debug_8hpp"/>
      </node>
      <node id="8">
        <label>range.hpp</label>
        <link refid="range_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>core.hpp</label>
        <link refid="core_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>operations.hpp</label>
        <link refid="operations_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="24">
        <label>/home/ram/OmniTemplate/splay_tree.hpp</label>
        <link refid="splay__tree_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>/home/ram/OmniTemplate/linear_algebra.hpp</label>
        <link refid="linear__algebra_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>/home/ram/OmniTemplate/graph_theory.hpp</label>
        <link refid="graph__theory_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>/home/ram/OmniTemplate/number_theory.hpp</label>
        <link refid="number__theory_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/home/ram/OmniTemplate/my_int.hpp</label>
        <link refid="my__int_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/ram/OmniTemplate/io.hpp</label>
        <link refid="io_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>/home/ram/OmniTemplate/geometry.hpp</label>
        <link refid="geometry_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>/home/ram/OmniTemplate/main.hpp</label>
        <link refid="main_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>/home/ram/OmniTemplate/combinatorics.hpp</label>
        <link refid="combinatorics_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>/home/ram/OmniTemplate/coroutine.hpp</label>
        <link refid="coroutine_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>/home/ram/OmniTemplate/dsu.hpp</label>
        <link refid="dsu_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>/home/ram/OmniTemplate/fft.hpp</label>
        <link refid="fft_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>/home/ram/OmniTemplate/segment_tree.hpp</label>
        <link refid="segment__tree_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/ram/OmniTemplate/2sat.hpp</label>
        <link refid="2sat_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/home/ram/OmniTemplate/utility.hpp</label>
        <link refid="utility_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/home/ram/OmniTemplate/test.cpp</label>
        <link refid="test_8cpp"/>
      </node>
      <node id="28">
        <label>/home/ram/OmniTemplate/treap.hpp</label>
        <link refid="treap_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>/home/ram/OmniTemplate/modulo.hpp</label>
        <link refid="modulo_8hpp"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>/home/ram/OmniTemplate/time.hpp</label>
        <link refid="time_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/home/ram/OmniTemplate/range.hpp</label>
        <link refid="range_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>/home/ram/OmniTemplate/persistent.hpp</label>
        <link refid="persistent_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>/home/ram/OmniTemplate/tree.hpp</label>
        <link refid="tree_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>/home/ram/OmniTemplate/string.hpp</label>
        <link refid="string_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>/home/ram/OmniTemplate/queue.hpp</label>
        <link refid="queue_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/ram/OmniTemplate/core.hpp</label>
        <link refid="core_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/ram/OmniTemplate/template.hpp</label>
        <link refid="template_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>/home/ram/OmniTemplate/operations.hpp</label>
        <link refid="operations_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>/home/ram/OmniTemplate/big_integer.hpp</label>
        <link refid="big__integer_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structrin" prot="public">rin</innerclass>
    <innernamespace refid="namespacestd">std</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="io_8hpp_1ab13ab1059a1675ee7a774c4524b84d23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename R</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto operator&lt;&lt;</definition>
        <argsstring>(R &amp;r, const T &amp;x) -&gt; decltype(r.in &gt;&gt; const_cast&lt; T &amp; &gt;(x), declval&lt; enable_if_t&lt; is_same&lt; R, rin &gt;::value, rin &amp; &gt;&gt;())</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>R &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/io.hpp" line="19" column="1" bodyfile="/home/ram/OmniTemplate/io.hpp" bodystart="19" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="io_8hpp_1a7df52f31e81b51a76e8f8699accaf3b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>enable_if_t&lt; is_same&lt; T, istream &gt;::value, <ref refid="structrin" kindref="compound">rin</ref> &gt;</type>
        <definition>enable_if_t&lt;is_same&lt;T, istream&gt;::value, rin&gt; operator&gt;&gt;</definition>
        <argsstring>(Stream &amp;is, T &amp;x)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>Stream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/io.hpp" line="26" column="14" bodyfile="/home/ram/OmniTemplate/io.hpp" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="io_8hpp_1affce1f2cffc83e9e4ecc9203fdd32d29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>auto &amp;</type>
        <definition>auto&amp; operator&lt;&lt;</definition>
        <argsstring>(Stream &amp;os, tuple&lt; T... &gt; t)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>Stream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>tuple&lt; T... &gt;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/io.hpp" line="31" column="1" bodyfile="/home/ram/OmniTemplate/io.hpp" bodystart="31" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="io_8hpp_1a1b122fd1e3de03a421d98f4bbb1473d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto print</definition>
        <argsstring>(const T1 &amp;arg1, const Ts &amp;... args)</argsstring>
        <name>print</name>
        <param>
          <type>const T1 &amp;</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>const Ts &amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/io.hpp" line="41" column="6" bodyfile="/home/ram/OmniTemplate/io.hpp" bodystart="41" bodyend="45"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="core_8hpp" kindref="compound">core.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3" refid="structrin" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structrin" kindref="compound">rin</ref><sp/>{</highlight></codeline>
<codeline lineno="4" refid="structrin_1a6a3c084fd3bba7cfc6f8cbd6c832b18e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>istream<sp/>&amp;<ref refid="structrin_1a6a3c084fd3bba7cfc6f8cbd6c832b18e" kindref="member">in</ref>;</highlight></codeline>
<codeline lineno="5" refid="structrin_1ae6238b84a27353d644112ea2fd3d3ca4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrin_1ae6238b84a27353d644112ea2fd3d3ca4" kindref="member">rin</ref>(istream<sp/>&amp;in_)<sp/>:<sp/><ref refid="structrin_1a6a3c084fd3bba7cfc6f8cbd6c832b18e" kindref="member">in</ref>(in_)<sp/>{}</highlight></codeline>
<codeline lineno="6" refid="structrin_1a13b9d026853a96ff1ab4e29bc6d5185c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<ref refid="structrin_1a13b9d026853a96ff1ab4e29bc6d5185c" kindref="member">operator&lt;&lt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="7" refid="structrin_1ac54363dcbc7ce811509e7ff360b78dad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<ref refid="structrin_1ac54363dcbc7ce811509e7ff360b78dad" kindref="member">operator&lt;&lt;</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;s)<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.empty())<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structrin_1a6a3c084fd3bba7cfc6f8cbd6c832b18e" kindref="member">in</ref><sp/>&gt;&gt;<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(s);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13" refid="structrin_1a7c7bbc816095cbe239ce52b980d7117e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/><ref refid="structrin" kindref="compound">rin</ref><sp/>&amp;<ref refid="structrin_1a7c7bbc816095cbe239ce52b980d7117e" kindref="member">operator&gt;&gt;</ref>(T<sp/>&amp;x)<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>x;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal">};</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="19" refid="io_8hpp_1ab13ab1059a1675ee7a774c4524b84d23" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="io_8hpp_1ab13ab1059a1675ee7a774c4524b84d23" kindref="member">operator&lt;&lt;</ref>(R<sp/>&amp;r,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;x)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>-&gt;<sp/>decltype(r.in<sp/>&gt;&gt;<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">T<sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(x),</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>declval&lt;enable_if_t&lt;is_same&lt;R,<sp/>rin&gt;::value,<sp/><ref refid="structrin" kindref="compound">rin</ref><sp/>&amp;&gt;&gt;())<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>r.in<sp/>&gt;&gt;<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">T<sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(x);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="26" refid="io_8hpp_1a7df52f31e81b51a76e8f8699accaf3b1" refkind="member"><highlight class="normal">enable_if_t&lt;is_same&lt;T,<sp/>istream&gt;::value,<sp/><ref refid="structrin" kindref="compound">rin</ref>&gt;<sp/><ref refid="io_8hpp_1a7df52f31e81b51a76e8f8699accaf3b1" kindref="member">operator&gt;&gt;</ref>(Stream<sp/>&amp;is,<sp/>T<sp/>&amp;x)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structrin" kindref="compound">rin</ref><sp/>r{is};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r<sp/>&gt;&gt;<sp/>x;</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="31" refid="io_8hpp_1affce1f2cffc83e9e4ecc9203fdd32d29" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<ref refid="io_8hpp_1ab13ab1059a1675ee7a774c4524b84d23" kindref="member">operator&lt;&lt;</ref>(Stream<sp/>&amp;os,<sp/>tuple&lt;T...&gt;<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>apply(</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;](</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;f,<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;...<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>f;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((os<sp/>&lt;&lt;<sp/><ref refid="core_8hpp_1a6a2dbe8e1a58258f9060682cf7ea063b" kindref="member">delim</ref><sp/>&lt;&lt;<sp/>x),<sp/>...);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="41" refid="io_8hpp_1a1b122fd1e3de03a421d98f4bbb1473d5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="io_8hpp_1a1b122fd1e3de03a421d98f4bbb1473d5" kindref="member">print</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1<sp/>&amp;arg1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Ts<sp/>&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>arg1;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>((cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>args),<sp/>...);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><ref refid="core_8hpp_1a42155fc7b646b2b5651b69a5fc8bf701" kindref="member">END_NS</ref></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">std<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>T&gt;</highlight></codeline>
<codeline lineno="49" refid="io_8hpp_1a40cf53faa8f3a9512c4dad9945ecb425" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<ref refid="io_8hpp_1ab13ab1059a1675ee7a774c4524b84d23" kindref="member">operator&lt;&lt;</ref>(Stream<sp/>&amp;os,<sp/>pair&lt;T...&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;p)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os<sp/>&lt;&lt;<sp/><ref refid="debug_8hpp_1aa310d6d6fd9f39ae8d81d5513865c0ec" kindref="member">simple_tp</ref>(p)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>p.first<sp/>&lt;&lt;<sp/><ref refid="core_8hpp_1a6a2dbe8e1a58258f9060682cf7ea063b" kindref="member">delim</ref><sp/>&lt;&lt;<sp/>p.second<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Container&gt;</highlight></codeline>
<codeline lineno="53" refid="io_8hpp_1a1920aa20adebf218cbbdf8bb06a4c351" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="io_8hpp_1ab13ab1059a1675ee7a774c4524b84d23" kindref="member">operator&lt;&lt;</ref>(Stream<sp/>&amp;os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Container<sp/>&amp;<ref refid="segment__tree_8hpp_1a38bf1e5e0427bdeba2b469eea9befc23" kindref="member">v</ref>)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>-&gt;<sp/>decltype(begin(<ref refid="segment__tree_8hpp_1a38bf1e5e0427bdeba2b469eea9befc23" kindref="member">v</ref>),<sp/>declval&lt;<ref refid="core_8hpp_1ab025e87040bd241c89f5a880c12fc80c" kindref="member">tp</ref>(os)&gt;())<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ed<sp/>=<sp/>begin(<ref refid="segment__tree_8hpp_1a38bf1e5e0427bdeba2b469eea9befc23" kindref="member">v</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>big<sp/>=<sp/><ref refid="segment__tree_8hpp_1a38bf1e5e0427bdeba2b469eea9befc23" kindref="member">v</ref>.size()<sp/>&gt;<sp/>20;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(big)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>advance(ed,<sp/>20);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ed<sp/>=<sp/>end(<ref refid="segment__tree_8hpp_1a38bf1e5e0427bdeba2b469eea9befc23" kindref="member">v</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/><ref refid="debug_8hpp_1aa310d6d6fd9f39ae8d81d5513865c0ec" kindref="member">simple_tp</ref>(<ref refid="segment__tree_8hpp_1a38bf1e5e0427bdeba2b469eea9befc23" kindref="member">v</ref>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;{&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>copy(begin(<ref refid="segment__tree_8hpp_1a38bf1e5e0427bdeba2b469eea9befc23" kindref="member">v</ref>),<sp/>ed,<sp/>make_ostream_joiner(os,<sp/><ref refid="core_8hpp_1a6a2dbe8e1a58258f9060682cf7ea063b" kindref="member">delim</ref>));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(big)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/><ref refid="core_8hpp_1a6a2dbe8e1a58258f9060682cf7ea063b" kindref="member">delim</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;...&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="70" refid="io_8hpp_1a26ed2eacd641d0bb463e15dd04d3dd63" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="io_8hpp_1ab13ab1059a1675ee7a774c4524b84d23" kindref="member">operator&lt;&lt;</ref>(<ref refid="structrin" kindref="compound">rin</ref><sp/>&amp;os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;<ref refid="segment__tree_8hpp_1a38bf1e5e0427bdeba2b469eea9befc23" kindref="member">v</ref>)<sp/>-&gt;<sp/>decltype(begin(<ref refid="segment__tree_8hpp_1a38bf1e5e0427bdeba2b469eea9befc23" kindref="member">v</ref>),<sp/>declval&lt;<ref refid="core_8hpp_1ab025e87040bd241c89f5a880c12fc80c" kindref="member">tp</ref>(os)&gt;())<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;elem<sp/>:<sp/><ref refid="segment__tree_8hpp_1a38bf1e5e0427bdeba2b469eea9befc23" kindref="member">v</ref>)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>elem;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__cplusplus<sp/>&gt;=<sp/>201703L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stream,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<ref refid="io_8hpp_1ab13ab1059a1675ee7a774c4524b84d23" kindref="member">operator&lt;&lt;</ref>(Stream<sp/>&amp;os,<sp/>optional&lt;T&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;opt)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>opt<sp/>?<sp/>(os<sp/>&lt;&lt;<sp/>*opt)<sp/>:<sp/>(os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;nullopt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor">}<sp/>//<sp/>namespace<sp/>std</highlight></codeline>
    </programlisting>
    <location file="/home/ram/OmniTemplate/io.hpp"/>
  </compounddef>
</doxygen>
