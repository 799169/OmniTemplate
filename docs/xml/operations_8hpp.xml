<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="operations_8hpp" kind="file" language="C++">
    <compoundname>operations.hpp</compoundname>
    <includes refid="range_8hpp" local="yes">range.hpp</includes>
    <includedby refid="core_8hpp" local="yes">/home/ram/OmniTemplate/core.hpp</includedby>
    <incdepgraph>
      <node id="4">
        <label>bits/stdc++.h</label>
      </node>
      <node id="7">
        <label>my_int.hpp</label>
        <link refid="my__int_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>io.hpp</label>
        <link refid="io_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>experimental/source_location</label>
      </node>
      <node id="5">
        <label>experimental/iterator</label>
      </node>
      <node id="10">
        <label>utility.hpp</label>
        <link refid="utility_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>debug.hpp</label>
        <link refid="debug_8hpp"/>
      </node>
      <node id="2">
        <label>range.hpp</label>
        <link refid="range_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>core.hpp</label>
        <link refid="core_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/ram/OmniTemplate/operations.hpp</label>
        <link refid="operations_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="24">
        <label>/home/ram/OmniTemplate/splay_tree.hpp</label>
        <link refid="splay__tree_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>/home/ram/OmniTemplate/linear_algebra.hpp</label>
        <link refid="linear__algebra_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>/home/ram/OmniTemplate/graph_theory.hpp</label>
        <link refid="graph__theory_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>/home/ram/OmniTemplate/number_theory.hpp</label>
        <link refid="number__theory_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/home/ram/OmniTemplate/my_int.hpp</label>
        <link refid="my__int_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/home/ram/OmniTemplate/io.hpp</label>
        <link refid="io_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>/home/ram/OmniTemplate/geometry.hpp</label>
        <link refid="geometry_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>/home/ram/OmniTemplate/main.hpp</label>
        <link refid="main_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>/home/ram/OmniTemplate/combinatorics.hpp</label>
        <link refid="combinatorics_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>/home/ram/OmniTemplate/coroutine.hpp</label>
        <link refid="coroutine_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>/home/ram/OmniTemplate/dsu.hpp</label>
        <link refid="dsu_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>/home/ram/OmniTemplate/fft.hpp</label>
        <link refid="fft_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>/home/ram/OmniTemplate/segment_tree.hpp</label>
        <link refid="segment__tree_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/ram/OmniTemplate/2sat.hpp</label>
        <link refid="2sat_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/home/ram/OmniTemplate/utility.hpp</label>
        <link refid="utility_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/home/ram/OmniTemplate/test.cpp</label>
        <link refid="test_8cpp"/>
      </node>
      <node id="28">
        <label>/home/ram/OmniTemplate/treap.hpp</label>
        <link refid="treap_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>/home/ram/OmniTemplate/modulo.hpp</label>
        <link refid="modulo_8hpp"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>/home/ram/OmniTemplate/time.hpp</label>
        <link refid="time_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>/home/ram/OmniTemplate/range.hpp</label>
        <link refid="range_8hpp"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>/home/ram/OmniTemplate/persistent.hpp</label>
        <link refid="persistent_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>/home/ram/OmniTemplate/tree.hpp</label>
        <link refid="tree_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>/home/ram/OmniTemplate/string.hpp</label>
        <link refid="string_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>/home/ram/OmniTemplate/queue.hpp</label>
        <link refid="queue_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/ram/OmniTemplate/core.hpp</label>
        <link refid="core_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/ram/OmniTemplate/template.hpp</label>
        <link refid="template_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/ram/OmniTemplate/operations.hpp</label>
        <link refid="operations_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>/home/ram/OmniTemplate/big_integer.hpp</label>
        <link refid="big__integer_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="operations_8hpp_1afcd538daef660984ecb8abf34697904b" prot="public" static="no">
        <name>ret</name>
        <param><defname>x</defname></param>
        <param><defname>id</defname></param>
        <initializer>	if (f == static_cast&lt;<ref refid="core_8hpp_1ab025e87040bd241c89f5a880c12fc80c" kindref="member">tp</ref>(f)&gt;(x)) {                                      \
		return <ref refid="structid" kindref="compound">id</ref>;                                                     \
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/operations.hpp" line="77" column="9" bodyfile="/home/ram/OmniTemplate/operations.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="operations_8hpp_1ab4c4b06b1f952a0071d8ae50f97f9788" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>unordered_set&lt; T &gt;</type>
        <definition>using uset =  unordered_set&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>uset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/operations.hpp" line="20" column="16" bodyfile="/home/ram/OmniTemplate/operations.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="operations_8hpp_1a391ecbfa26a20f6287fb4048f56b0978" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T(*)(T, T)</type>
        <definition>using bin_op =  T(*)(T, T)</definition>
        <argsstring></argsstring>
        <name>bin_op</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/operations.hpp" line="76" column="16" bodyfile="/home/ram/OmniTemplate/operations.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="operations_8hpp_1ab6822e2f5527212c7db6dd31be7f3ba6" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto operator-</definition>
        <argsstring>(const T1 &amp;a, const T2 &amp;b)</argsstring>
        <name>operator-</name>
        <param>
          <type>const T1 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const T2 &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/operations.hpp" line="4" column="16" bodyfile="/home/ram/OmniTemplate/operations.hpp" bodystart="4" bodyend="6"/>
      </memberdef>
      <memberdef kind="function" id="operations_8hpp_1a98ed0803268ba29fcc8977206b177923" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto operator!=</definition>
        <argsstring>(const T1 &amp;a, const T2 &amp;b)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const T1 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const T2 &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/operations.hpp" line="8" column="16" bodyfile="/home/ram/OmniTemplate/operations.hpp" bodystart="8" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="operations_8hpp_1a1297749985d820e08c6c88a285dc80eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto operator&lt;=</definition>
        <argsstring>(const T1 &amp;a, const T2 &amp;b)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const T1 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const T2 &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/operations.hpp" line="11" column="15" bodyfile="/home/ram/OmniTemplate/operations.hpp" bodystart="11" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="operations_8hpp_1ae3edbf9ffcbf3c8b40d15f6666442cef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto operator&gt;=</definition>
        <argsstring>(const T1 &amp;a, const T2 &amp;b)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const T1 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const T2 &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/operations.hpp" line="14" column="20" bodyfile="/home/ram/OmniTemplate/operations.hpp" bodystart="14" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="operations_8hpp_1ad8f1353b1f5665443a78d860006e9920" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto operator&gt;</definition>
        <argsstring>(const T1 &amp;a, const T2 &amp;b)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const T1 &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const T2 &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/operations.hpp" line="17" column="20" bodyfile="/home/ram/OmniTemplate/operations.hpp" bodystart="17" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="operations_8hpp_1a87d3fb5fed45f1a54221f7a8705addb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="core_8hpp_1a9925e7a8568cf11b8431a0e634ada482" kindref="member">um</ref></type>
        <definition>um operator+</definition>
        <argsstring>(um a, um const &amp;b)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="core_8hpp_1a9925e7a8568cf11b8431a0e634ada482" kindref="member">um</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="core_8hpp_1a9925e7a8568cf11b8431a0e634ada482" kindref="member">um</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/operations.hpp" line="21" column="4" bodyfile="/home/ram/OmniTemplate/operations.hpp" bodystart="21" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="operations_8hpp_1aec18699b662c408078f232f080606419" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto operator|</definition>
        <argsstring>(uset&lt; T &gt; const &amp;a, uset&lt; T &gt; const &amp;b)</argsstring>
        <name>operator|</name>
        <param>
          <type><ref refid="operations_8hpp_1ab4c4b06b1f952a0071d8ae50f97f9788" kindref="member">uset</ref>&lt; T &gt; const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="operations_8hpp_1ab4c4b06b1f952a0071d8ae50f97f9788" kindref="member">uset</ref>&lt; T &gt; const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/operations.hpp" line="27" column="21" bodyfile="/home/ram/OmniTemplate/operations.hpp" bodystart="27" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="operations_8hpp_1a7464e219d6fea318d2f4b6843939cd85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto operator&amp;</definition>
        <argsstring>(uset&lt; T &gt; const &amp;a, uset&lt; T &gt; const &amp;b)</argsstring>
        <name>operator&amp;</name>
        <param>
          <type><ref refid="operations_8hpp_1ab4c4b06b1f952a0071d8ae50f97f9788" kindref="member">uset</ref>&lt; T &gt; const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="operations_8hpp_1ab4c4b06b1f952a0071d8ae50f97f9788" kindref="member">uset</ref>&lt; T &gt; const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/operations.hpp" line="33" column="21" bodyfile="/home/ram/OmniTemplate/operations.hpp" bodystart="33" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="operations_8hpp_1a6e82ab4b503a3ef3be962c204c72cb9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto sub_set</definition>
        <argsstring>(uset&lt; T &gt; const &amp;a, uset&lt; T &gt; const &amp;b, uset&lt; T &gt; &amp;ret)</argsstring>
        <name>sub_set</name>
        <param>
          <type><ref refid="operations_8hpp_1ab4c4b06b1f952a0071d8ae50f97f9788" kindref="member">uset</ref>&lt; T &gt; const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="operations_8hpp_1ab4c4b06b1f952a0071d8ae50f97f9788" kindref="member">uset</ref>&lt; T &gt; const &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="operations_8hpp_1ab4c4b06b1f952a0071d8ae50f97f9788" kindref="member">uset</ref>&lt; T &gt; &amp;</type>
          <declname>ret</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/operations.hpp" line="43" column="21" bodyfile="/home/ram/OmniTemplate/operations.hpp" bodystart="43" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="operations_8hpp_1a82061a9f3dea98f0a1242c43dfa985a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto operator-</definition>
        <argsstring>(uset&lt; T &gt; const &amp;a, uset&lt; T &gt; const &amp;b)</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="operations_8hpp_1ab4c4b06b1f952a0071d8ae50f97f9788" kindref="member">uset</ref>&lt; T &gt; const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="operations_8hpp_1ab4c4b06b1f952a0071d8ae50f97f9788" kindref="member">uset</ref>&lt; T &gt; const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/operations.hpp" line="51" column="21" bodyfile="/home/ram/OmniTemplate/operations.hpp" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="operations_8hpp_1a74ef5f5d3de3fd62c398c03b00540ac3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto operator^</definition>
        <argsstring>(uset&lt; T &gt; const &amp;a, uset&lt; T &gt; const &amp;b)</argsstring>
        <name>operator^</name>
        <param>
          <type><ref refid="operations_8hpp_1ab4c4b06b1f952a0071d8ae50f97f9788" kindref="member">uset</ref>&lt; T &gt; const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="operations_8hpp_1ab4c4b06b1f952a0071d8ae50f97f9788" kindref="member">uset</ref>&lt; T &gt; const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/operations.hpp" line="55" column="21" bodyfile="/home/ram/OmniTemplate/operations.hpp" bodystart="55" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="operations_8hpp_1a7fcf9006b0b6d5ce6b426ac6dea3b567" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto operator*</definition>
        <argsstring>(vector&lt; T &gt; a, vector&lt; T &gt; b)</argsstring>
        <name>operator*</name>
        <param>
          <type>vector&lt; T &gt;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>vector&lt; T &gt;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/operations.hpp" line="60" column="21" bodyfile="/home/ram/OmniTemplate/operations.hpp" bodystart="60" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="operations_8hpp_1afd72f4b4fdc3e2687e5c4aa6565ee37d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Iterator</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto operator+</definition>
        <argsstring>(Iterator it, enable_if_t&lt;!is_same&lt; typename iterator_traits&lt; decltype(it)&gt;::iterator_category, random_access_iterator_tag &gt;::value, size_t &gt; n)</argsstring>
        <name>operator+</name>
        <param>
          <type>Iterator</type>
          <declname>it</declname>
        </param>
        <param>
          <type>enable_if_t&lt;!is_same&lt; typename iterator_traits&lt; decltype(it)&gt;::iterator_category, random_access_iterator_tag &gt;::value, size_t &gt;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/operations.hpp" line="67" column="6" bodyfile="/home/ram/OmniTemplate/operations.hpp" bodystart="67" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="operations_8hpp_1ac969ae49524a67aba9be0f061955ef23" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr <ref refid="structll" kindref="compound">ll</ref></type>
        <definition>constexpr ll identity</definition>
        <argsstring>(bin_op&lt; ll const &amp; &gt; const &amp;f)</argsstring>
        <name>identity</name>
        <param>
          <type><ref refid="operations_8hpp_1a391ecbfa26a20f6287fb4048f56b0978" kindref="member">bin_op</ref>&lt; <ref refid="structll" kindref="compound">ll</ref> const &amp; &gt; const &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/operations.hpp" line="81" column="14" bodyfile="/home/ram/OmniTemplate/operations.hpp" bodystart="81" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="operations_8hpp_1a1927210d55cc1384803f4a609d7174ee" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr <ref refid="structll" kindref="compound">ll</ref></type>
        <definition>constexpr ll identity</definition>
        <argsstring>(bin_op&lt; ll &gt; const &amp;f)</argsstring>
        <name>identity</name>
        <param>
          <type><ref refid="operations_8hpp_1a391ecbfa26a20f6287fb4048f56b0978" kindref="member">bin_op</ref>&lt; <ref refid="structll" kindref="compound">ll</ref> &gt; const &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/operations.hpp" line="86" column="14" bodyfile="/home/ram/OmniTemplate/operations.hpp" bodystart="86" bodyend="89"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="range_8hpp" kindref="compound">range.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="4" refid="operations_8hpp_1ab6822e2f5527212c7db6dd31be7f3ba6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>constexpr<sp/><ref refid="operations_8hpp_1ab6822e2f5527212c7db6dd31be7f3ba6" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1<sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T2<sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>+<sp/>-b;</highlight></codeline>
<codeline lineno="6"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="8" refid="operations_8hpp_1a98ed0803268ba29fcc8977206b177923" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>constexpr<sp/><ref refid="operations_8hpp_1a98ed0803268ba29fcc8977206b177923" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1<sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T2<sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(a<sp/>==<sp/>b);</highlight></codeline>
<codeline lineno="10"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11" refid="operations_8hpp_1a1297749985d820e08c6c88a285dc80eb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2&gt;<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="operations_8hpp_1a1297749985d820e08c6c88a285dc80eb" kindref="member">operator&lt;=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1<sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T2<sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(b<sp/>&lt;<sp/>a);</highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14" refid="operations_8hpp_1ae3edbf9ffcbf3c8b40d15f6666442cef" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2&gt;<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="operations_8hpp_1ae3edbf9ffcbf3c8b40d15f6666442cef" kindref="member">operator&gt;=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1<sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T2<sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b<sp/>&lt;=<sp/>a;</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17" refid="operations_8hpp_1ad8f1353b1f5665443a78d860006e9920" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2&gt;<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="operations_8hpp_1ad8f1353b1f5665443a78d860006e9920" kindref="member">operator&gt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T1<sp/>&amp;a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T2<sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b<sp/>&lt;<sp/>a;</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20" refid="operations_8hpp_1ab4c4b06b1f952a0071d8ae50f97f9788" refkind="member"><highlight class="normal"><ref refid="debug_8hpp_1ae23bfdc9a034bac8e1c722626e7cc983" kindref="member">tm</ref>()<sp/>using<sp/><ref refid="operations_8hpp_1ab4c4b06b1f952a0071d8ae50f97f9788" kindref="member">uset</ref><sp/>=<sp/>unordered_set&lt;T&gt;;</highlight></codeline>
<codeline lineno="21" refid="operations_8hpp_1a87d3fb5fed45f1a54221f7a8705addb9" refkind="member"><highlight class="normal"><ref refid="core_8hpp_1a9925e7a8568cf11b8431a0e634ada482" kindref="member">um</ref><sp/>operator+(<ref refid="core_8hpp_1a9925e7a8568cf11b8431a0e634ada482" kindref="member">um</ref><sp/>a,<sp/><ref refid="core_8hpp_1a9925e7a8568cf11b8431a0e634ada482" kindref="member">um</ref><sp/>const<sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;p<sp/>:<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a[p.first]<sp/>+=<sp/>p.second;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27" refid="operations_8hpp_1aec18699b662c408078f232f080606419" refkind="member"><highlight class="normal"><ref refid="debug_8hpp_1ae23bfdc9a034bac8e1c722626e7cc983" kindref="member">tm</ref>()<sp/>auto<sp/>operator|(<ref refid="operations_8hpp_1ab4c4b06b1f952a0071d8ae50f97f9788" kindref="member">uset</ref>&lt;T&gt;<sp/>const<sp/>&amp;a,<sp/><ref refid="operations_8hpp_1ab4c4b06b1f952a0071d8ae50f97f9788" kindref="member">uset</ref>&lt;T&gt;<sp/>const<sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;[sm,<sp/>bg]<sp/>=<sp/>minmax(a,<sp/>b);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="operations_8hpp_1afcd538daef660984ecb8abf34697904b" kindref="member">ret</ref><sp/>=<sp/>bg;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="operations_8hpp_1afcd538daef660984ecb8abf34697904b" kindref="member">ret</ref>.insert(<ref refid="core_8hpp_1a2f9ddbc7133cc3a48efbc824006bd3cb" kindref="member">al</ref>(sm));</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="operations_8hpp_1afcd538daef660984ecb8abf34697904b" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">};</highlight></codeline>
<codeline lineno="33" refid="operations_8hpp_1a7464e219d6fea318d2f4b6843939cd85" refkind="member"><highlight class="normal"><ref refid="debug_8hpp_1ae23bfdc9a034bac8e1c722626e7cc983" kindref="member">tm</ref>()<sp/>auto<sp/>operator&amp;(<ref refid="operations_8hpp_1ab4c4b06b1f952a0071d8ae50f97f9788" kindref="member">uset</ref>&lt;T&gt;<sp/>const<sp/>&amp;a,<sp/><ref refid="operations_8hpp_1ab4c4b06b1f952a0071d8ae50f97f9788" kindref="member">uset</ref>&lt;T&gt;<sp/>const<sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;[sm,<sp/>bg]<sp/>=<sp/>minmax(a,<sp/>b);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="operations_8hpp_1ab4c4b06b1f952a0071d8ae50f97f9788" kindref="member">uset&lt;T&gt;</ref><sp/><ref refid="operations_8hpp_1afcd538daef660984ecb8abf34697904b" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;x<sp/>:<sp/>sm)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bg.count(x))<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="operations_8hpp_1afcd538daef660984ecb8abf34697904b" kindref="member">ret</ref>.insert(x);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="operations_8hpp_1afcd538daef660984ecb8abf34697904b" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43" refid="operations_8hpp_1a6e82ab4b503a3ef3be962c204c72cb9b" refkind="member"><highlight class="normal"><ref refid="debug_8hpp_1ae23bfdc9a034bac8e1c722626e7cc983" kindref="member">tm</ref>()<sp/>auto<sp/><ref refid="operations_8hpp_1a6e82ab4b503a3ef3be962c204c72cb9b" kindref="member">sub_set</ref>(<ref refid="operations_8hpp_1ab4c4b06b1f952a0071d8ae50f97f9788" kindref="member">uset</ref>&lt;T&gt;<sp/>const<sp/>&amp;a,<sp/><ref refid="operations_8hpp_1ab4c4b06b1f952a0071d8ae50f97f9788" kindref="member">uset</ref>&lt;T&gt;<sp/>const<sp/>&amp;b,<sp/><ref refid="operations_8hpp_1ab4c4b06b1f952a0071d8ae50f97f9788" kindref="member">uset</ref>&lt;T&gt;<sp/>&amp;<ref refid="operations_8hpp_1afcd538daef660984ecb8abf34697904b" kindref="member">ret</ref>)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;x<sp/>:<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!b.count(x))<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="operations_8hpp_1afcd538daef660984ecb8abf34697904b" kindref="member">ret</ref>.insert(x);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="operations_8hpp_1afcd538daef660984ecb8abf34697904b" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51" refid="operations_8hpp_1a82061a9f3dea98f0a1242c43dfa985a9" refkind="member"><highlight class="normal"><ref refid="debug_8hpp_1ae23bfdc9a034bac8e1c722626e7cc983" kindref="member">tm</ref>()<sp/>auto<sp/>operator-(<ref refid="operations_8hpp_1ab4c4b06b1f952a0071d8ae50f97f9788" kindref="member">uset</ref>&lt;T&gt;<sp/>const<sp/>&amp;a,<sp/><ref refid="operations_8hpp_1ab4c4b06b1f952a0071d8ae50f97f9788" kindref="member">uset</ref>&lt;T&gt;<sp/>const<sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="operations_8hpp_1ab4c4b06b1f952a0071d8ae50f97f9788" kindref="member">uset&lt;T&gt;</ref><sp/><ref refid="operations_8hpp_1afcd538daef660984ecb8abf34697904b" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="operations_8hpp_1a6e82ab4b503a3ef3be962c204c72cb9b" kindref="member">sub_set</ref>(a,<sp/>b,<sp/><ref refid="operations_8hpp_1afcd538daef660984ecb8abf34697904b" kindref="member">ret</ref>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55" refid="operations_8hpp_1a74ef5f5d3de3fd62c398c03b00540ac3" refkind="member"><highlight class="normal"><ref refid="debug_8hpp_1ae23bfdc9a034bac8e1c722626e7cc983" kindref="member">tm</ref>()<sp/>auto<sp/>operator^(<ref refid="operations_8hpp_1ab4c4b06b1f952a0071d8ae50f97f9788" kindref="member">uset</ref>&lt;T&gt;<sp/>const<sp/>&amp;a,<sp/><ref refid="operations_8hpp_1ab4c4b06b1f952a0071d8ae50f97f9788" kindref="member">uset</ref>&lt;T&gt;<sp/>const<sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="operations_8hpp_1ab4c4b06b1f952a0071d8ae50f97f9788" kindref="member">uset&lt;T&gt;</ref><sp/><ref refid="operations_8hpp_1afcd538daef660984ecb8abf34697904b" kindref="member">ret</ref><sp/>=<sp/>a<sp/>-<sp/>b;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="operations_8hpp_1a6e82ab4b503a3ef3be962c204c72cb9b" kindref="member">sub_set</ref>(b,<sp/>a,<sp/><ref refid="operations_8hpp_1afcd538daef660984ecb8abf34697904b" kindref="member">ret</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="operations_8hpp_1afcd538daef660984ecb8abf34697904b" kindref="member">ret</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60" refid="operations_8hpp_1a7fcf9006b0b6d5ce6b426ac6dea3b567" refkind="member"><highlight class="normal"><ref refid="debug_8hpp_1ae23bfdc9a034bac8e1c722626e7cc983" kindref="member">tm</ref>()<sp/>auto<sp/>operator*(<ref refid="core_8hpp_1aff943633016deb6c62a519ffe92c6819" kindref="member">vc</ref>&lt;T&gt;<sp/>a,<sp/><ref refid="core_8hpp_1aff943633016deb6c62a519ffe92c6819" kindref="member">vc</ref>&lt;T&gt;<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(a.size()<sp/>==<sp/>b.size());</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>vc&lt;T&gt;<sp/>c(a.size());</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="core_8hpp_1a9d597f42af7d85fd96c46aa17cc610d9" kindref="member">fo</ref>(i,<sp/>a.size())<sp/>{<sp/>c[i]<sp/>=<sp/>a[i]<sp/>*<sp/>b[i];<sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Iterator&gt;</highlight></codeline>
<codeline lineno="67" refid="operations_8hpp_1afd72f4b4fdc3e2687e5c4aa6565ee37d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="operations_8hpp_1a87d3fb5fed45f1a54221f7a8705addb9" kindref="member">operator+</ref>(</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>Iterator<sp/>it,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>enable_if_t&lt;!is_same&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>iterator_traits&lt;<ref refid="core_8hpp_1ab025e87040bd241c89f5a880c12fc80c" kindref="member">tp</ref>(it)&gt;::iterator_category,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>random_access_iterator_tag&gt;::value,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>advance(it,<sp/>n);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76" refid="operations_8hpp_1a391ecbfa26a20f6287fb4048f56b0978" refkind="member"><highlight class="normal"><ref refid="debug_8hpp_1ae23bfdc9a034bac8e1c722626e7cc983" kindref="member">tm</ref>()<sp/>using<sp/><ref refid="operations_8hpp_1a391ecbfa26a20f6287fb4048f56b0978" kindref="member">bin_op</ref><sp/>=<sp/>T(*)(T,<sp/>T);</highlight></codeline>
<codeline lineno="77" refid="operations_8hpp_1afcd538daef660984ecb8abf34697904b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ret(x,<sp/>id)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(f<sp/>==<sp/>static_cast&lt;tp(f)&gt;(x))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="79"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>id;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="operations_8hpp_1ac969ae49524a67aba9be0f061955ef23" refkind="member"><highlight class="normal">constexpr<sp/><ref refid="structll" kindref="compound">ll</ref><sp/><ref refid="operations_8hpp_1ac969ae49524a67aba9be0f061955ef23" kindref="member">identity</ref>(<ref refid="operations_8hpp_1a391ecbfa26a20f6287fb4048f56b0978" kindref="member">bin_op&lt;ll const &amp;&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;f)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="operations_8hpp_1afcd538daef660984ecb8abf34697904b" kindref="member">ret</ref>(max&lt;ll&gt;,<sp/>-<ref refid="core_8hpp_1ab89b6ceb8bf54011eedd872b54361eca" kindref="member">inf</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="operations_8hpp_1afcd538daef660984ecb8abf34697904b" kindref="member">ret</ref>(min&lt;ll&gt;,<sp/><ref refid="core_8hpp_1ab89b6ceb8bf54011eedd872b54361eca" kindref="member">inf</ref>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>abort();</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86" refid="operations_8hpp_1a1927210d55cc1384803f4a609d7174ee" refkind="member"><highlight class="normal">constexpr<sp/><ref refid="structll" kindref="compound">ll</ref><sp/><ref refid="operations_8hpp_1ac969ae49524a67aba9be0f061955ef23" kindref="member">identity</ref>(<ref refid="operations_8hpp_1a391ecbfa26a20f6287fb4048f56b0978" kindref="member">bin_op&lt;ll&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;f)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="operations_8hpp_1afcd538daef660984ecb8abf34697904b" kindref="member">ret</ref>(gcd&lt;ll&gt;,<sp/>0);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>abort();</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/ram/OmniTemplate/operations.hpp"/>
  </compounddef>
</doxygen>
