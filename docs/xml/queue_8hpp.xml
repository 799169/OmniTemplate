<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="queue_8hpp" kind="file" language="C++">
    <compoundname>queue.hpp</compoundname>
    <includes refid="core_8hpp" local="yes">core.hpp</includes>
    <includedby refid="template_8hpp" local="yes">/home/ram/OmniTemplate/template.hpp</includedby>
    <incdepgraph>
      <node id="3">
        <label>bits/stdc++.h</label>
      </node>
      <node id="6">
        <label>my_int.hpp</label>
        <link refid="my__int_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>io.hpp</label>
        <link refid="io_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>experimental/source_location</label>
      </node>
      <node id="4">
        <label>experimental/iterator</label>
      </node>
      <node id="11">
        <label>utility.hpp</label>
        <link refid="utility_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>debug.hpp</label>
        <link refid="debug_8hpp"/>
      </node>
      <node id="9">
        <label>range.hpp</label>
        <link refid="range_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/ram/OmniTemplate/queue.hpp</label>
        <link refid="queue_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>core.hpp</label>
        <link refid="core_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>operations.hpp</label>
        <link refid="operations_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>/home/ram/OmniTemplate/test.cpp</label>
        <link refid="test_8cpp"/>
      </node>
      <node id="1">
        <label>/home/ram/OmniTemplate/queue.hpp</label>
        <link refid="queue_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/ram/OmniTemplate/template.hpp</label>
        <link refid="template_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classQueueAdaptor" prot="public">QueueAdaptor</innerclass>
    <innerclass refid="classMinStack" prot="public">MinStack</innerclass>
    <innerclass refid="classMinQueue" prot="public">MinQueue</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="queue_8hpp_1a3582140b7324e0ea0a09e7b49aff5da4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_queueadaptor</definition>
        <argsstring>()</argsstring>
        <name>test_queueadaptor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/queue.hpp" line="69" column="6" bodyfile="/home/ram/OmniTemplate/queue.hpp" bodystart="69" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="queue_8hpp_1a10088901e62ea354d6ae3d8cd9575a05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_minstack</definition>
        <argsstring>()</argsstring>
        <name>test_minstack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/queue.hpp" line="107" column="6" bodyfile="/home/ram/OmniTemplate/queue.hpp" bodystart="107" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="queue_8hpp_1ade8983381de2dd15dd63f80934f01827" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_minqueue</definition>
        <argsstring>()</argsstring>
        <name>test_minqueue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/queue.hpp" line="122" column="6" bodyfile="/home/ram/OmniTemplate/queue.hpp" bodystart="122" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="queue_8hpp_1a409d820ae1bf7e9bac41a9258ef79165" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_queue</definition>
        <argsstring>()</argsstring>
        <name>test_queue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ram/OmniTemplate/queue.hpp" line="137" column="6" bodyfile="/home/ram/OmniTemplate/queue.hpp" bodystart="137" bodyend="141"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="core_8hpp" kindref="compound">core.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Queue<sp/>adaptor,<sp/>creates<sp/>a<sp/>queue<sp/>using<sp/>two<sp/>Stacks<sp/>left,<sp/>right</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>If<sp/>there<sp/>are<sp/>at<sp/>least<sp/>two<sp/>elements,<sp/>left<sp/>and<sp/>right<sp/>are<sp/>not<sp/>empty.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>If<sp/>there<sp/>is<sp/>one<sp/>element,<sp/>it<sp/>is<sp/>in<sp/>left.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="classQueueAdaptor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stack&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classQueueAdaptor" kindref="compound">QueueAdaptor</ref><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="9" refid="classQueueAdaptor_1a7d8d187a304d8c0a2d5044966bfbb8a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classMinStack" kindref="compound">container_type</ref><sp/>=<sp/>Stack;</highlight></codeline>
<codeline lineno="10" refid="classQueueAdaptor_1a504a74bd62b9e4f0d7ac731fe07a8b8f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classQueueAdaptor_1a504a74bd62b9e4f0d7ac731fe07a8b8f" kindref="member">value_type</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stack::value_type;</highlight></codeline>
<codeline lineno="11" refid="classQueueAdaptor_1a9d1778a597097422d7545f38b7bc18ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classQueueAdaptor_1a9d1778a597097422d7545f38b7bc18ff" kindref="member">size_type</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stack::size_type;</highlight></codeline>
<codeline lineno="12" refid="classQueueAdaptor_1a879e8bf98a35a1ea6cc7d63b0de0783f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classQueueAdaptor_1a879e8bf98a35a1ea6cc7d63b0de0783f" kindref="member">reference</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stack::reference;</highlight></codeline>
<codeline lineno="13" refid="classQueueAdaptor_1a56ffcdcc62cfe0618fc90437ce482018" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classQueueAdaptor_1a56ffcdcc62cfe0618fc90437ce482018" kindref="member">const_reference</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Stack::const_reference;</highlight></codeline>
<codeline lineno="14" refid="classQueueAdaptor_1ad3da3b616f21aa04d52328583eed51ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQueueAdaptor_1a56ffcdcc62cfe0618fc90437ce482018" kindref="member">const_reference</ref><sp/><ref refid="classQueueAdaptor_1ad3da3b616f21aa04d52328583eed51ed" kindref="member">front</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(left.empty()<sp/>?<sp/>right<sp/>:<sp/>left).top();</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17" refid="classQueueAdaptor_1a66ac47ae5211e9ee3c81fdcb97f37451" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQueueAdaptor_1a879e8bf98a35a1ea6cc7d63b0de0783f" kindref="member">reference</ref><sp/><ref refid="classQueueAdaptor_1a66ac47ae5211e9ee3c81fdcb97f37451" kindref="member">front</ref>()<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="classQueueAdaptor_1a879e8bf98a35a1ea6cc7d63b0de0783f" kindref="member">reference</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classQueueAdaptor" kindref="compound">QueueAdaptor</ref><sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">).<ref refid="classQueueAdaptor_1ad3da3b616f21aa04d52328583eed51ed" kindref="member">front</ref>());</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21" refid="classQueueAdaptor_1a7140ad57c092adb529df4212bbf62f92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQueueAdaptor_1a56ffcdcc62cfe0618fc90437ce482018" kindref="member">const_reference</ref><sp/><ref refid="classQueueAdaptor_1a7140ad57c092adb529df4212bbf62f92" kindref="member">back</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(right.empty()<sp/>?<sp/>left<sp/>:<sp/>right).top();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24" refid="classQueueAdaptor_1a86760f4e5f8f261a4199af7bfd6e175c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQueueAdaptor_1a879e8bf98a35a1ea6cc7d63b0de0783f" kindref="member">reference</ref><sp/><ref refid="classQueueAdaptor_1a86760f4e5f8f261a4199af7bfd6e175c" kindref="member">back</ref>()<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="classQueueAdaptor_1a879e8bf98a35a1ea6cc7d63b0de0783f" kindref="member">reference</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classQueueAdaptor" kindref="compound">QueueAdaptor</ref><sp/>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">).<ref refid="classQueueAdaptor_1a7140ad57c092adb529df4212bbf62f92" kindref="member">back</ref>());</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28" refid="classQueueAdaptor_1a526c084a248a28ebec26d5934546f63d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classQueueAdaptor_1a526c084a248a28ebec26d5934546f63d" kindref="member">empty</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>left.empty()<sp/>&amp;&amp;<sp/>right.empty();<sp/>}</highlight></codeline>
<codeline lineno="29" refid="classQueueAdaptor_1ac5d740b880e456d5a44cdba1f5acf2c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQueueAdaptor_1a9d1778a597097422d7545f38b7bc18ff" kindref="member">size_type</ref><sp/><ref refid="classQueueAdaptor_1ac5d740b880e456d5a44cdba1f5acf2c1" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>left.size()<sp/>+<sp/>right.size();<sp/>}</highlight></codeline>
<codeline lineno="30" refid="classQueueAdaptor_1ad0f545cec9fdfb5cdda40a51c9ff8648" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classQueueAdaptor_1ad0f545cec9fdfb5cdda40a51c9ff8648" kindref="member">push</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQueueAdaptor_1a504a74bd62b9e4f0d7ac731fe07a8b8f" kindref="member">value_type</ref><sp/>&amp;val)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classQueueAdaptor_1a526c084a248a28ebec26d5934546f63d" kindref="member">empty</ref>()<sp/>?<sp/>left<sp/>:<sp/>right).<ref refid="classQueueAdaptor_1ad0f545cec9fdfb5cdda40a51c9ff8648" kindref="member">push</ref>(val);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_invariant();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34" refid="classQueueAdaptor_1a81ec309acaf4e8ad47e49d2fbffb0000" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classQueueAdaptor_1a81ec309acaf4e8ad47e49d2fbffb0000" kindref="member">pop</ref>()<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left.pop();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left.empty()<sp/>&amp;&amp;<sp/>!right.empty())<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>last<sp/>=<sp/>right.top();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>b<sp/>=<sp/><ref refid="classQueueAdaptor_1ac5d740b880e456d5a44cdba1f5acf2c1" kindref="member">size</ref>()<sp/>&gt;<sp/>1;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right.pop();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>!right.empty();<sp/>right.pop())<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left.push(right.top());</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right.push(last);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check_invariant();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="53" refid="classQueueAdaptor_1a93327b413fb302d9f9b533a21179d39f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<ref refid="classQueueAdaptor_1a93327b413fb302d9f9b533a21179d39f" kindref="member">get_left</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>left;<sp/>}</highlight></codeline>
<codeline lineno="54" refid="classQueueAdaptor_1a9434246f808b040616e5bffb304fce43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<ref refid="classQueueAdaptor_1a9434246f808b040616e5bffb304fce43" kindref="member">get_right</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>right;<sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>Stack<sp/>left,<sp/>right;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>check_invariant()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classQueueAdaptor_1ac5d740b880e456d5a44cdba1f5acf2c1" kindref="member">size</ref>()<sp/>&gt;=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!left.empty()<sp/>&amp;&amp;<sp/>!right.empty());</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classQueueAdaptor_1ac5d740b880e456d5a44cdba1f5acf2c1" kindref="member">size</ref>()<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(!left.empty());</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="classQueueAdaptor_1ad3da3b616f21aa04d52328583eed51ed" kindref="member">front</ref>()<sp/>==<sp/><ref refid="classQueueAdaptor_1a7140ad57c092adb529df4212bbf62f92" kindref="member">back</ref>());</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="classQueueAdaptor_1a526c084a248a28ebec26d5934546f63d" kindref="member">empty</ref>());</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal">};</highlight></codeline>
<codeline lineno="69" refid="queue_8hpp_1a3582140b7324e0ea0a09e7b49aff5da4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="queue_8hpp_1a3582140b7324e0ea0a09e7b49aff5da4" kindref="member">test_queueadaptor</ref>()<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQueueAdaptor" kindref="compound">QueueAdaptor&lt;stack&lt;ll&gt;</ref>&gt;<sp/>q;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>q.<ref refid="classQueueAdaptor_1ad0f545cec9fdfb5cdda40a51c9ff8648" kindref="member">push</ref>(4);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>q.<ref refid="classQueueAdaptor_1ad0f545cec9fdfb5cdda40a51c9ff8648" kindref="member">push</ref>(5);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>q.<ref refid="classQueueAdaptor_1a81ec309acaf4e8ad47e49d2fbffb0000" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>q.<ref refid="classQueueAdaptor_1ad0f545cec9fdfb5cdda40a51c9ff8648" kindref="member">push</ref>(6);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>q.<ref refid="classQueueAdaptor_1ad0f545cec9fdfb5cdda40a51c9ff8648" kindref="member">push</ref>(7);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>q.<ref refid="classQueueAdaptor_1ad0f545cec9fdfb5cdda40a51c9ff8648" kindref="member">push</ref>(8);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(q.<ref refid="classQueueAdaptor_1ac5d740b880e456d5a44cdba1f5acf2c1" kindref="member">size</ref>()<sp/>==<sp/>4);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(!q.<ref refid="classQueueAdaptor_1a526c084a248a28ebec26d5934546f63d" kindref="member">empty</ref>());</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(q.<ref refid="classQueueAdaptor_1ad3da3b616f21aa04d52328583eed51ed" kindref="member">front</ref>()<sp/>==<sp/>5);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="core_8hpp_1a49bc164f30e64702250d2cbea09bf86c" kindref="member">dbg</ref>(q.<ref refid="classQueueAdaptor_1a7140ad57c092adb529df4212bbf62f92" kindref="member">back</ref>());</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(q.<ref refid="classQueueAdaptor_1a7140ad57c092adb529df4212bbf62f92" kindref="member">back</ref>()<sp/>==<sp/>8);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>q.<ref refid="classQueueAdaptor_1a81ec309acaf4e8ad47e49d2fbffb0000" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>q.<ref refid="classQueueAdaptor_1a81ec309acaf4e8ad47e49d2fbffb0000" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(q.<ref refid="classQueueAdaptor_1ad3da3b616f21aa04d52328583eed51ed" kindref="member">front</ref>()<sp/>==<sp/>7);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(q.<ref refid="classQueueAdaptor_1a7140ad57c092adb529df4212bbf62f92" kindref="member">back</ref>()<sp/>==<sp/>8);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>q.<ref refid="classQueueAdaptor_1a81ec309acaf4e8ad47e49d2fbffb0000" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(q.<ref refid="classQueueAdaptor_1ad3da3b616f21aa04d52328583eed51ed" kindref="member">front</ref>()<sp/>==<sp/>8);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(q.<ref refid="classQueueAdaptor_1a7140ad57c092adb529df4212bbf62f92" kindref="member">back</ref>()<sp/>==<sp/>8);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>q.<ref refid="classQueueAdaptor_1a81ec309acaf4e8ad47e49d2fbffb0000" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(q.<ref refid="classQueueAdaptor_1ac5d740b880e456d5a44cdba1f5acf2c1" kindref="member">size</ref>()<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>q.<ref refid="classQueueAdaptor_1a526c084a248a28ebec26d5934546f63d" kindref="member">empty</ref>());</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>q.<ref refid="classQueueAdaptor_1ad0f545cec9fdfb5cdda40a51c9ff8648" kindref="member">push</ref>(4);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(q.<ref refid="classQueueAdaptor_1ad3da3b616f21aa04d52328583eed51ed" kindref="member">front</ref>()<sp/>==<sp/>4);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(q.<ref refid="classQueueAdaptor_1a7140ad57c092adb529df4212bbf62f92" kindref="member">back</ref>()<sp/>==<sp/>4);</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Base<sp/>=<sp/>stack&lt;pair&lt;T,<sp/>T&gt;&gt;&gt;</highlight></codeline>
<codeline lineno="96" refid="classMinStack" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classMinStack" kindref="compound">MinStack</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Base<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="98" refid="classMinStack_1a410d91ba73ecf060c4cf7c5d542c63e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classMinStack_1a410d91ba73ecf060c4cf7c5d542c63e0" kindref="member">container_type</ref><sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="99" refid="classMinStack_1a28cd940fc80f2d8983d1ce270d803740" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classMinStack_1a28cd940fc80f2d8983d1ce270d803740" kindref="member">value_type</ref><sp/>=<sp/>T;</highlight></codeline>
<codeline lineno="100" refid="classMinStack_1ab6f486799ff38265a93d4de4bf047e6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classMinStack_1ab6f486799ff38265a93d4de4bf047e6f" kindref="member">size_type</ref><sp/>=<sp/>size_t;</highlight></codeline>
<codeline lineno="101" refid="classMinStack_1ababec68b9c2f1fbf3e573f0c00fb55a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classMinStack_1ababec68b9c2f1fbf3e573f0c00fb55a0" kindref="member">reference</ref><sp/>=<sp/><ref refid="classMinStack_1a28cd940fc80f2d8983d1ce270d803740" kindref="member">value_type</ref><sp/>&amp;;</highlight></codeline>
<codeline lineno="102" refid="classMinStack_1af778589a78b11f906c7f6da00c1c0043" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classMinStack_1af778589a78b11f906c7f6da00c1c0043" kindref="member">const_reference</ref><sp/>=<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classMinStack_1a28cd940fc80f2d8983d1ce270d803740" kindref="member">value_type</ref><sp/>&amp;;</highlight></codeline>
<codeline lineno="103" refid="classMinStack_1a85a56f030b69fd1b4191f8318b6b9d28" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMinStack_1a85a56f030b69fd1b4191f8318b6b9d28" kindref="member">push</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;val)<sp/>{<sp/>Base::push({val,<sp/><ref refid="classMinStack_1abb4c7ff623765a0c24f2091a27855310" kindref="member">::min</ref>(val,<sp/><ref refid="classMinStack_1abb4c7ff623765a0c24f2091a27855310" kindref="member">min</ref>())});<sp/>}</highlight></codeline>
<codeline lineno="104" refid="classMinStack_1ae98eca6ba51417aabdea04f6c223078f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;<ref refid="classMinStack_1ae98eca6ba51417aabdea04f6c223078f" kindref="member">top</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Base::top().first;<sp/>}</highlight></codeline>
<codeline lineno="105" refid="classMinStack_1abb4c7ff623765a0c24f2091a27855310" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="classMinStack_1abb4c7ff623765a0c24f2091a27855310" kindref="member">min</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Base::empty()<sp/>?<sp/><ref refid="core_8hpp_1ab89b6ceb8bf54011eedd872b54361eca" kindref="member">inf</ref><sp/>:<sp/>Base::top().second;<sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal">};</highlight></codeline>
<codeline lineno="107" refid="queue_8hpp_1a10088901e62ea354d6ae3d8cd9575a05" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="queue_8hpp_1a10088901e62ea354d6ae3d8cd9575a05" kindref="member">test_minstack</ref>()<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMinStack" kindref="compound">MinStack&lt;ll&gt;</ref><sp/>ms;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>ms.<ref refid="classMinStack_1a85a56f030b69fd1b4191f8318b6b9d28" kindref="member">push</ref>(2);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>ms.<ref refid="classMinStack_1a85a56f030b69fd1b4191f8318b6b9d28" kindref="member">push</ref>(5);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(ms.<ref refid="classMinStack_1abb4c7ff623765a0c24f2091a27855310" kindref="member">min</ref>()<sp/>==<sp/>2);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>ms.pop();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>ms.<ref refid="classMinStack_1a85a56f030b69fd1b4191f8318b6b9d28" kindref="member">push</ref>(1);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(ms.<ref refid="classMinStack_1abb4c7ff623765a0c24f2091a27855310" kindref="member">min</ref>()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>ms.pop();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(ms.<ref refid="classMinStack_1abb4c7ff623765a0c24f2091a27855310" kindref="member">min</ref>()<sp/>==<sp/>2);</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118" refid="classMinQueue" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classMinQueue" kindref="compound">MinQueue</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classQueueAdaptor" kindref="compound">QueueAdaptor</ref>&lt;MinStack&lt;T&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="120" refid="classMinQueue_1aa050a922fde794170ad24d639f42df36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="classMinQueue_1aa050a922fde794170ad24d639f42df36" kindref="member">min</ref>()<sp/>{<sp/>return<sp/>::min(this.<ref refid="classQueueAdaptor_1a93327b413fb302d9f9b533a21179d39f" kindref="member">get_left</ref>().<ref refid="classMinQueue_1aa050a922fde794170ad24d639f42df36" kindref="member">min</ref>(),<sp/>this.<ref refid="classQueueAdaptor_1a9434246f808b040616e5bffb304fce43" kindref="member">get_right</ref>().<ref refid="classMinQueue_1aa050a922fde794170ad24d639f42df36" kindref="member">min</ref>());<sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal">};</highlight></codeline>
<codeline lineno="122" refid="queue_8hpp_1ade8983381de2dd15dd63f80934f01827" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="queue_8hpp_1ade8983381de2dd15dd63f80934f01827" kindref="member">test_minqueue</ref>()<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classMinQueue" kindref="compound">MinQueue&lt;ll&gt;</ref><sp/>mq;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(mq.<ref refid="classMinQueue_1aa050a922fde794170ad24d639f42df36" kindref="member">min</ref>()<sp/>==<sp/><ref refid="core_8hpp_1ab89b6ceb8bf54011eedd872b54361eca" kindref="member">inf</ref>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>mq.<ref refid="classQueueAdaptor_1ad0f545cec9fdfb5cdda40a51c9ff8648" kindref="member">push</ref>(3);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>mq.<ref refid="classQueueAdaptor_1ad0f545cec9fdfb5cdda40a51c9ff8648" kindref="member">push</ref>(5);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(mq.<ref refid="classMinQueue_1aa050a922fde794170ad24d639f42df36" kindref="member">min</ref>()<sp/>==<sp/>3);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>mq.<ref refid="classQueueAdaptor_1a81ec309acaf4e8ad47e49d2fbffb0000" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(mq.<ref refid="classMinQueue_1aa050a922fde794170ad24d639f42df36" kindref="member">min</ref>()<sp/>==<sp/>5);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>mq.<ref refid="classQueueAdaptor_1ad0f545cec9fdfb5cdda40a51c9ff8648" kindref="member">push</ref>(4);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(mq.<ref refid="classMinQueue_1aa050a922fde794170ad24d639f42df36" kindref="member">min</ref>()<sp/>==<sp/>4);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>mq.<ref refid="classQueueAdaptor_1a81ec309acaf4e8ad47e49d2fbffb0000" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(mq.<ref refid="classMinQueue_1aa050a922fde794170ad24d639f42df36" kindref="member">min</ref>()<sp/>==<sp/>4);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>mq.<ref refid="classQueueAdaptor_1a81ec309acaf4e8ad47e49d2fbffb0000" kindref="member">pop</ref>();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(mq.<ref refid="classMinQueue_1aa050a922fde794170ad24d639f42df36" kindref="member">min</ref>()<sp/>==<sp/><ref refid="core_8hpp_1ab89b6ceb8bf54011eedd872b54361eca" kindref="member">inf</ref>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137" refid="queue_8hpp_1a409d820ae1bf7e9bac41a9258ef79165" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="queue_8hpp_1a409d820ae1bf7e9bac41a9258ef79165" kindref="member">test_queue</ref>()<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="queue_8hpp_1a10088901e62ea354d6ae3d8cd9575a05" kindref="member">test_minstack</ref>();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="queue_8hpp_1a3582140b7324e0ea0a09e7b49aff5da4" kindref="member">test_queueadaptor</ref>();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="queue_8hpp_1ade8983381de2dd15dd63f80934f01827" kindref="member">test_minqueue</ref>();</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/ram/OmniTemplate/queue.hpp"/>
  </compounddef>
</doxygen>
