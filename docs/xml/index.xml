<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygenindex xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="index.xsd" version="1.8.17">
  <compound refid="structar" kind="struct"><name>ar</name>
    <member refid="structar_1a851a27df00ce2569904d6d18ca540cd1" kind="typedef"><name>type</name></member>
  </compound>
  <compound refid="structar_3_01T_0fn_0e_4" kind="struct"><name>ar&lt; T[n]&gt;</name>
    <member refid="structar_3_01T_0fn_0e_4_1ad07c2389455b609ba547f224af1a4c39" kind="typedef"><name>type</name></member>
  </compound>
  <compound refid="structbfs" kind="struct"><name>bfs</name>
    <member refid="structbfs_1a7f0c781accd2af82a51e4e95b758617d" kind="function"><name>operator()</name></member>
    <member refid="structbfs_1a2947bb4418be3551585773e397d35fe6" kind="function"><name>gsearch</name></member>
  </compound>
  <compound refid="structbigint" kind="struct"><name>bigint</name>
    <member refid="structbigint_1ad6fb867cb89712f81b7c069eb8f027be" kind="variable"><name>v</name></member>
    <member refid="structbigint_1a324563b78ab11071f07181a94a992edc" kind="function"><name>bigint</name></member>
    <member refid="structbigint_1af5db872f2ba54c931ba25fac1eb80f26" kind="function"><name>operator[]</name></member>
  </compound>
  <compound refid="structbytehash" kind="struct"><name>bytehash</name>
    <member refid="structbytehash_1a9134bf96ee911825f045ee603d5970cd" kind="function"><name>operator()</name></member>
  </compound>
  <compound refid="structcht" kind="struct"><name>cht</name>
    <member refid="structcht_1a2dacac27432e96effbcd18cd158074ec" kind="variable"><name>h</name></member>
    <member refid="structcht_1a3a87804c6e0c6e46d72ff2e095f5794a" kind="function"><name>cht</name></member>
    <member refid="structcht_1af18569403920449f2f6a7059497dddb9" kind="function"><name>min</name></member>
  </compound>
  <compound refid="structdfs" kind="struct"><name>dfs</name>
    <member refid="structdfs_1a4a1ad18797e9a2f7861d55ccf743727f" kind="function"><name>operator()</name></member>
    <member refid="structdfs_1a2947bb4418be3551585773e397d35fe6" kind="function"><name>gsearch</name></member>
  </compound>
  <compound refid="structdsu" kind="struct"><name>dsu</name>
    <member refid="structdsu_1a124d53d5eb8022b25d804bd5e2b5d6d4" kind="variable"><name>p</name></member>
    <member refid="structdsu_1ac8bcf25a17813d0298500990894e8192" kind="variable"><name>s</name></member>
    <member refid="structdsu_1a3d8ef126d199a5463e3b9647bd7162ee" kind="function"><name>dsu</name></member>
    <member refid="structdsu_1ab7482914117e1c1c47b8ef3ee8f020b9" kind="function"><name>operator[]</name></member>
    <member refid="structdsu_1a4ab9115da80cfd9d9811ea536442b6d6" kind="function"><name>operator()</name></member>
  </compound>
  <compound refid="structedge" kind="struct"><name>edge</name>
    <member refid="structedge_1ae1956b073448bd37adb2d9ba2b9dd3f4" kind="variable"><name>w</name></member>
    <member refid="structedge_1aa3b10490436d6c2ad31246951e592a81" kind="variable"><name>a</name></member>
    <member refid="structedge_1a0ac88f6beb8ef9a47d362ee943c88b42" kind="variable"><name>b</name></member>
    <member refid="structedge_1a97a0b01119fb61e9e7998064edfa97d2" kind="function"><name>to_tuple</name></member>
  </compound>
  <compound refid="structfirst__cmp" kind="struct"><name>first_cmp</name>
    <member refid="structfirst__cmp_1a552c2330a99f5e51676e3d5463bba040" kind="function"><name>operator()</name></member>
  </compound>
  <compound refid="structfix" kind="struct"><name>fix</name>
    <member refid="structfix_1a2012a85b07f6b8fca89428ee232a0c52" kind="variable"><name>func</name></member>
    <member refid="structfix_1adb36f588bb16737970ac97c54686c126" kind="function"><name>fix</name></member>
    <member refid="structfix_1af62440018ea81c6b2fc7b29620a714c2" kind="function"><name>operator()</name></member>
  </compound>
  <compound refid="structgsearch" kind="struct"><name>gsearch</name>
    <member refid="structgsearch_1ab98eef9a7b11ac9c53d3414ee0e2ad00" kind="variable"><name>g</name></member>
    <member refid="structgsearch_1abf2c48fcc1e2bcea14720192fdb497df" kind="variable"><name>n</name></member>
    <member refid="structgsearch_1a1e83146a3e390b704f7b55409e7ad7bd" kind="variable"><name>v</name></member>
    <member refid="structgsearch_1a7f93010b6f8e7026b2300a03c4232d6c" kind="variable"><name>q</name></member>
    <member refid="structgsearch_1afa8e0680350061b5f45d444dfd9cc05b" kind="variable"><name>p</name></member>
    <member refid="structgsearch_1a8a8798107a301730f224547b6fd01ef7" kind="variable"><name>d</name></member>
    <member refid="structgsearch_1a2947bb4418be3551585773e397d35fe6" kind="function"><name>gsearch</name></member>
    <member refid="structgsearch_1a3f44a83cbe6f9c20052e5409decccd87" kind="function"><name>operator()</name></member>
    <member refid="structgsearch_1a92a8ded190aadad238efe11b5ac3edcc" kind="function"><name>operator()</name></member>
    <member refid="structgsearch_1af3e34f320b6bf7f9c57a2f2cad674747" kind="function"><name>add</name></member>
  </compound>
  <compound refid="structstd_1_1hash_3_01ll_01_4" kind="struct"><name>std::hash&lt; ll &gt;</name>
  </compound>
  <compound refid="structstd_1_1hash_3_01md_01_4" kind="struct"><name>std::hash&lt; md &gt;</name>
    <member refid="structstd_1_1hash_3_01md_01_4_1ae02292d626a0cd109a0e55c5a6779c3f" kind="function"><name>operator()</name></member>
  </compound>
  <compound refid="structhash__str" kind="struct"><name>hash_str</name>
    <member refid="structhash__str_1a30fd050c96c02d32403015aa45cf36c5" kind="variable"><name>lcg_mod</name></member>
    <member refid="structhash__str_1a3f7edccf79b433723951542b1521e893" kind="variable"><name>st</name></member>
    <member refid="structhash__str_1a8ff1aebd14db666e829ba1c002158b74" kind="variable"><name>h</name></member>
    <member refid="structhash__str_1a6dfc768d54875741155fc4f45cbdab56" kind="variable"><name>p</name></member>
    <member refid="structhash__str_1aa2aca132b7c912cb2a0f7f85fa4bac9d" kind="function"><name>hash_str</name></member>
    <member refid="structhash__str_1ae6fd6e0300d1b4020e0df5430f54f507" kind="function"><name>operator()</name></member>
  </compound>
  <compound refid="structid" kind="struct"><name>id</name>
  </compound>
  <compound refid="structint__it" kind="struct"><name>int_it</name>
    <member refid="structint__it_1ad986a324b4a8e1c5a8fca9e411d6c078" kind="typedef"><name>iterator_category</name></member>
    <member refid="structint__it_1a1e1f66e40cd8620afe9129f4f0266fa7" kind="variable"><name>x</name></member>
    <member refid="structint__it_1abf47510f41383d441e656a7a60e0ed19" kind="variable"><name>m</name></member>
    <member refid="structint__it_1aa90da42bd4e6bda319461fece4aeec7b" kind="function"><name>int_it</name></member>
    <member refid="structint__it_1a97f5d5ebe98f08abe434fcf64fd83f1f" kind="function"><name>int_it</name></member>
    <member refid="structint__it_1a6afa1f0489e1f8b6ae372aee8cbfa244" kind="function"><name>operator*</name></member>
    <member refid="structint__it_1aefbd19544f6f65507479b9058aab2998" kind="function"><name>operator auto</name></member>
    <member refid="structint__it_1aff5e9dd149ee82a037564e075635b763" kind="function"><name>operator+</name></member>
    <member refid="structint__it_1a11d8b2c8dacbe2341c89f62cf9e8610d" kind="function"><name>operator-</name></member>
    <member refid="structint__it_1a3a2c84ca5c1870c3047e052b5f5b3395" kind="function"><name>operator-</name></member>
    <member refid="structint__it_1a5cd1e32162f9ad122fb85002d6321013" kind="function"><name>operator++</name></member>
    <member refid="structint__it_1afda2c78b3b1431cd325a63e47d5b4f9b" kind="function"><name>operator--</name></member>
    <member refid="structint__it_1a85eb0ee7f734e93b64a6432da5c2ab56" kind="function"><name>operator--</name></member>
    <member refid="structint__it_1a2892123a79f6f13fa6a9f16e8f5f207b" kind="function"><name>operator++</name></member>
  </compound>
  <compound refid="structstd_1_1is__integral_3_01ll_01_4" kind="struct"><name>std::is_integral&lt; ll &gt;</name>
  </compound>
  <compound refid="structstd_1_1is__signed_3_01ll_01_4" kind="struct"><name>std::is_signed&lt; ll &gt;</name>
  </compound>
  <compound refid="structstd_1_1is__unsigned_3_01ll_01_4" kind="struct"><name>std::is_unsigned&lt; ll &gt;</name>
  </compound>
  <compound refid="structit__base" kind="struct"><name>it_base</name>
    <member refid="structit__base_1a750730b3baf6464b16f1483c656f5dce" kind="typedef"><name>value_type</name></member>
    <member refid="structit__base_1aff4e3754839c1106ced2e57a47d44425" kind="typedef"><name>pointer</name></member>
    <member refid="structit__base_1a65ea2a2492ba8ae44a336fd192f5ff2a" kind="typedef"><name>reference</name></member>
    <member refid="structit__base_1a2f441c3115c3b785aedc6816276d7511" kind="typedef"><name>difference_type</name></member>
  </compound>
  <compound refid="structSplayTree_1_1iterator" kind="struct"><name>SplayTree::iterator</name>
    <member refid="structSplayTree_1_1iterator_1ad051365ab1cf91a51228681ae68f3e2e" kind="typedef"><name>iterator_category</name></member>
    <member refid="structSplayTree_1_1iterator_1a570dbdcaec4a93b65f4ae518d71ca774" kind="variable"><name>node</name></member>
    <member refid="structSplayTree_1_1iterator_1a97df329bdff57dc3a956cea177bd3624" kind="function"><name>operator--</name></member>
    <member refid="structSplayTree_1_1iterator_1a16422ee75f155368e0186196ac89b43c" kind="function"><name>operator++</name></member>
    <member refid="structSplayTree_1_1iterator_1a784b5bd1d70a24bf1367fedd30c9dc7e" kind="function"><name>operator*</name></member>
    <member refid="structSplayTree_1_1iterator_1a657b0988d690e341ba0560d59b845143" kind="function"><name>iterator</name></member>
    <member refid="structSplayTree_1_1iterator_1aa7e5c04b48a15e8f3d7725fdc208572b" kind="function"><name>operator==</name></member>
    <member refid="structSplayTree_1_1iterator_1ab495f849095916f32ae0ebbfc15a9d11" kind="function"><name>advance</name></member>
  </compound>
  <compound refid="structlazy__ptr" kind="struct"><name>lazy_ptr</name>
    <member refid="structlazy__ptr_1a4cfd0fda110740dadc3bbe91d58bc290" kind="variable"><name>ptr</name></member>
    <member refid="structlazy__ptr_1a23198f24df77a8c13e4e505161c7b731" kind="function"><name>operator-&gt;</name></member>
    <member refid="structlazy__ptr_1a8067d4abb926381d2112c94e38f23f47" kind="function"><name>lazy_ptr</name></member>
    <member refid="structlazy__ptr_1aa656ca4583a15e622f958b9b1a31a595" kind="function"><name>operator*</name></member>
    <member refid="structlazy__ptr_1abb09deaf76afd329d3c1028305ee271d" kind="function"><name>operator bool</name></member>
  </compound>
  <compound refid="structlets__add" kind="struct"><name>lets_add</name>
    <member refid="structlets__add_1a0ec85cd9b6101f88a531cd43e6aa5f87" kind="function"><name>lets_add</name></member>
  </compound>
  <compound refid="structll" kind="struct"><name>ll</name>
    <member refid="structll_1ad2ebb308973148a8c1f2a60b07a63914" kind="variable"><name>x</name></member>
    <member refid="structll_1a4f550126ee54fd066f53186f27093b76" kind="function"><name>ll</name></member>
    <member refid="structll_1a8b0607da16d0d7e00bb430f04f3a6f3d" kind="function"><name>operator auto &amp;</name></member>
    <member refid="structll_1acd3200c39683e9801ba0562ed14924fa" kind="function"><name>operator lli</name></member>
    <member refid="structll_1a6bf19079acad25173814f398d03c6785" kind="function"><name>operator-</name></member>
    <member refid="structll_1a3253b9882ccb1168c5aecfb54188f769" kind="function"><name>operator--</name></member>
    <member refid="structll_1ab3dcffcb63a9afc64a1ed739c72f7367" kind="function"><name>operator++</name></member>
    <member refid="structll_1afe1cbe7e5183933ed0a2e943d5850088" kind="function"><name>operator+=</name></member>
  </compound>
  <compound refid="structmat" kind="struct"><name>mat</name>
    <member refid="structmat_1aca56f851058aa09cf0460a3969aa6629" kind="variable"><name>r</name></member>
    <member refid="structmat_1abb1c76ee1813be34021752a1d9efa0ec" kind="variable"><name>c</name></member>
    <member refid="structmat_1a0c873d2c32fd1b8cc4ad6fe8c6952277" kind="variable"><name>a</name></member>
    <member refid="structmat_1a9ad6e1850cab94280da915e5020dddeb" kind="function"><name>mat</name></member>
    <member refid="structmat_1a1d61fff31bc57cc20b0c37a187ebd647" kind="function"><name>mat</name></member>
    <member refid="structmat_1a776aa197276703b5f9ec5fea2b104602" kind="function"><name>mat</name></member>
    <member refid="structmat_1a788ed9db3460102dbf99530f5b79de5e" kind="function"><name>mat</name></member>
    <member refid="structmat_1a2e094cc1c8b50b4ff26f6e2f885c9b96" kind="function"><name>operator[]</name></member>
    <member refid="structmat_1a3b5d5195a5157bc1fcc0d1df1d702553" kind="function"><name>operator[]</name></member>
    <member refid="structmat_1a5276e05d6558dd927544e92147e26fc1" kind="function"><name>id</name></member>
  </compound>
  <compound refid="structmd" kind="struct"><name>md</name>
    <member refid="structmd_1ae010a9bb8f22532125423306ed05d3d4" kind="variable"><name>x</name></member>
    <member refid="structmd_1a5d3fbc95f155d9fd6c8e6f2adb0c21eb" kind="function"><name>md</name></member>
    <member refid="structmd_1adf938bd8e00154130a8cf712a747ea3d" kind="function"><name>md</name></member>
    <member refid="structmd_1a35987cee585ce0405bb4125d8f62b6b3" kind="function"><name>md</name></member>
    <member refid="structmd_1a0ec8460ddbed45528ad11227e82a0f14" kind="function"><name>operator auto</name></member>
  </compound>
  <compound refid="classMinQueue" kind="class"><name>MinQueue</name>
    <member refid="classMinQueue_1aa050a922fde794170ad24d639f42df36" kind="function"><name>min</name></member>
  </compound>
  <compound refid="classMinStack" kind="class"><name>MinStack</name>
    <member refid="classMinStack_1a410d91ba73ecf060c4cf7c5d542c63e0" kind="typedef"><name>container_type</name></member>
    <member refid="classMinStack_1a28cd940fc80f2d8983d1ce270d803740" kind="typedef"><name>value_type</name></member>
    <member refid="classMinStack_1ab6f486799ff38265a93d4de4bf047e6f" kind="typedef"><name>size_type</name></member>
    <member refid="classMinStack_1ababec68b9c2f1fbf3e573f0c00fb55a0" kind="typedef"><name>reference</name></member>
    <member refid="classMinStack_1af778589a78b11f906c7f6da00c1c0043" kind="typedef"><name>const_reference</name></member>
    <member refid="classMinStack_1a85a56f030b69fd1b4191f8318b6b9d28" kind="function"><name>push</name></member>
    <member refid="classMinStack_1ae98eca6ba51417aabdea04f6c223078f" kind="function"><name>top</name></member>
    <member refid="classMinStack_1abb4c7ff623765a0c24f2091a27855310" kind="function"><name>min</name></member>
  </compound>
  <compound refid="structmymax" kind="struct"><name>mymax</name>
    <member refid="structmymax_1a152e4b3221f69d5ecead46cda55fb2bf" kind="function"><name>operator()</name></member>
  </compound>
  <compound refid="structno" kind="struct"><name>no</name>
    <member refid="structno_1a3ba164f5ead58d3f015564e74a934a5a" kind="variable"><name>p</name></member>
    <member refid="structno_1a4a8720eaee2f83379ea11f1f09318539" kind="variable"><name>v</name></member>
    <member refid="structno_1a25936b1dd27df91a24479835b5acc4b3" kind="function"><name>no</name></member>
    <member refid="structno_1a960156e927f79fdc000b9d230233369c" kind="function"><name>gt</name></member>
    <member refid="structno_1aeab546c13d21bc9056b96300093a97ea" kind="function"><name>operator bool</name></member>
    <member refid="structno_1a27eebf6a6aa79e20dd853fa39bf400bd" kind="function"><name>dp</name></member>
  </compound>
  <compound refid="structno__impl" kind="struct"><name>no_impl</name>
    <member refid="structno__impl_1a0f24ce7c9ca9e957e8afc61af333f436" kind="variable"><name>i</name></member>
    <member refid="structno__impl_1addb10d5b60a612d078476d1c721bf9af" kind="function"><name>no_impl</name></member>
  </compound>
  <compound refid="structno__mod" kind="struct"><name>no_mod</name>
  </compound>
  <compound refid="structno__ptr__v" kind="struct"><name>no_ptr_v</name>
    <member refid="structno__ptr__v_1a3f803abedc29db87949caf402f2bcf62" kind="variable"><name>v</name></member>
    <member refid="structno__ptr__v_1aa16efb18404e5dd1900a5875cd91fc7d" kind="variable"><name>l_</name></member>
    <member refid="structno__ptr__v_1acb91e0442a70654ff9c188c6ed066312" kind="variable"><name>r_</name></member>
    <member refid="structno__ptr__v_1a80e621a9b805617100dbfca48485323b" kind="function"><name>no_ptr_v</name></member>
    <member refid="structno__ptr__v_1a432ad9590576bb262d394c36192458c7" kind="function"><name>no_ptr_v</name></member>
  </compound>
  <compound refid="structno__v" kind="struct"><name>no_v</name>
    <member refid="structno__v_1a5721bd7b454d7fab00fafc71a05c739d" kind="variable"><name>a</name></member>
    <member refid="structno__v_1afeb623775433d4df7750227067691789" kind="variable"><name>z</name></member>
    <member refid="structno__v_1a16914d5aa1cdd6a92f6524de5767fa1b" kind="function"><name>no_v</name></member>
  </compound>
  <compound refid="structSplayTree_1_1Node" kind="struct"><name>SplayTree::Node</name>
    <member refid="structSplayTree_1_1Node_1a37fd8ea4f80e4763676fb3a80dbe8c81" kind="variable"><name>value</name></member>
    <member refid="structSplayTree_1_1Node_1ad58709abd217b595a81e7644025186ae" kind="variable"><name>child</name></member>
    <member refid="structSplayTree_1_1Node_1a1e7187c88cf9cf7d8d886b7e331fa844" kind="variable"><name>parent</name></member>
  </compound>
  <compound refid="structstd_1_1numeric__limits_3_01ll_01_4" kind="struct"><name>std::numeric_limits&lt; ll &gt;</name>
  </compound>
  <compound refid="structpers" kind="struct"><name>pers</name>
    <member refid="structpers_1ab6266965035895a8d15e4562e12a7534" kind="typedef"><name>event</name></member>
    <member refid="structpers_1a21c930a460a93a1f9f9c0204d1b02fc2" kind="variable"><name>s</name></member>
    <member refid="structpers_1a4f00b5204ad9a36fc53c6218ac2e9bd6" kind="function"><name>operator=</name></member>
    <member refid="structpers_1a7ccd9b10b92b376ed94d1cd884cb8d53" kind="function"><name>operator auto</name></member>
  </compound>
  <compound refid="structpers__ptr" kind="struct"><name>pers_ptr</name>
    <member refid="structpers__ptr_1a09c40afa9040c7e8bd07b993e7052ae8" kind="variable"><name>ptr</name></member>
    <member refid="structpers__ptr_1a11c0ed5aa0c51c3c737a440c5b03b38a" kind="function"><name>operator-&gt;</name></member>
    <member refid="structpers__ptr_1a73050bc27d498b39a0232f12d611807e" kind="function"><name>pers_ptr</name></member>
    <member refid="structpers__ptr_1a831b3935357d59fc6234d7fa91e3b73d" kind="function"><name>operator*</name></member>
    <member refid="structpers__ptr_1a893fe3ea38d6996721fb9568f5cef0ba" kind="function"><name>operator bool</name></member>
  </compound>
  <compound refid="classQueueAdaptor" kind="class"><name>QueueAdaptor</name>
    <member refid="classQueueAdaptor_1a7d8d187a304d8c0a2d5044966bfbb8a6" kind="typedef"><name>container_type</name></member>
    <member refid="classQueueAdaptor_1a504a74bd62b9e4f0d7ac731fe07a8b8f" kind="typedef"><name>value_type</name></member>
    <member refid="classQueueAdaptor_1a9d1778a597097422d7545f38b7bc18ff" kind="typedef"><name>size_type</name></member>
    <member refid="classQueueAdaptor_1a879e8bf98a35a1ea6cc7d63b0de0783f" kind="typedef"><name>reference</name></member>
    <member refid="classQueueAdaptor_1a56ffcdcc62cfe0618fc90437ce482018" kind="typedef"><name>const_reference</name></member>
    <member refid="classQueueAdaptor_1a5378bfe2bcfbe4cb45418f19e07c90f7" kind="variable"><name>left</name></member>
    <member refid="classQueueAdaptor_1a5d8cc6aecfa958ac23dee1a1ecaf28fe" kind="variable"><name>right</name></member>
    <member refid="classQueueAdaptor_1ad3da3b616f21aa04d52328583eed51ed" kind="function"><name>front</name></member>
    <member refid="classQueueAdaptor_1a66ac47ae5211e9ee3c81fdcb97f37451" kind="function"><name>front</name></member>
    <member refid="classQueueAdaptor_1a7140ad57c092adb529df4212bbf62f92" kind="function"><name>back</name></member>
    <member refid="classQueueAdaptor_1a86760f4e5f8f261a4199af7bfd6e175c" kind="function"><name>back</name></member>
    <member refid="classQueueAdaptor_1a526c084a248a28ebec26d5934546f63d" kind="function"><name>empty</name></member>
    <member refid="classQueueAdaptor_1ac5d740b880e456d5a44cdba1f5acf2c1" kind="function"><name>size</name></member>
    <member refid="classQueueAdaptor_1ad0f545cec9fdfb5cdda40a51c9ff8648" kind="function"><name>push</name></member>
    <member refid="classQueueAdaptor_1a81ec309acaf4e8ad47e49d2fbffb0000" kind="function"><name>pop</name></member>
    <member refid="classQueueAdaptor_1a93327b413fb302d9f9b533a21179d39f" kind="function"><name>get_left</name></member>
    <member refid="classQueueAdaptor_1a9434246f808b040616e5bffb304fce43" kind="function"><name>get_right</name></member>
    <member refid="classQueueAdaptor_1a5ec873fd13c2c08d7be4ad5d9be143d1" kind="function"><name>check_invariant</name></member>
  </compound>
  <compound refid="structrandom__device__patch" kind="struct"><name>random_device_patch</name>
    <member refid="structrandom__device__patch_1a5d58f2b4a5507b0b1ae6273eee7d7e07" kind="function"><name>operator()</name></member>
    <member refid="structrandom__device__patch_1ad1afe488ba29afca0ca7787af051cdbe" kind="function"><name>entropy</name></member>
  </compound>
  <compound refid="structrange" kind="struct"><name>range</name>
    <member refid="structrange_1a626638a2956ba810e53246d756b2e653" kind="variable"><name>bg</name></member>
    <member refid="structrange_1ae3f4c53575e4bd9a8ddfa92c3646c7b5" kind="variable"><name>ed</name></member>
    <member refid="structrange_1ad05dc640fa5b15e5bcffec3e6e195ab9" kind="function"><name>range</name></member>
    <member refid="structrange_1acc39e7240d6dd0d4f4069a610e0c366b" kind="function"><name>range</name></member>
    <member refid="structrange_1a9e40a11c9a0e9da9b9dbe5e1b21e1a38" kind="function"><name>begin</name></member>
    <member refid="structrange_1abbe13c40fc2dbb3052319e1c1aa24ca8" kind="function"><name>end</name></member>
    <member refid="structrange_1a39b799ab3f38facb002a424f67cc2e71" kind="function"><name>operator ll</name></member>
  </compound>
  <compound refid="structrin" kind="struct"><name>rin</name>
    <member refid="structrin_1a6a3c084fd3bba7cfc6f8cbd6c832b18e" kind="variable"><name>in</name></member>
    <member refid="structrin_1ae6238b84a27353d644112ea2fd3d3ca4" kind="function"><name>rin</name></member>
    <member refid="structrin_1a13b9d026853a96ff1ab4e29bc6d5185c" kind="function"><name>operator&lt;&lt;</name></member>
    <member refid="structrin_1ac54363dcbc7ce811509e7ff360b78dad" kind="function"><name>operator&lt;&lt;</name></member>
    <member refid="structrin_1a7c7bbc816095cbe239ce52b980d7117e" kind="function"><name>operator&gt;&gt;</name></member>
  </compound>
  <compound refid="structsearch__it" kind="struct"><name>search_it</name>
    <member refid="structsearch__it_1a0ef4e543076893cd1e302dd0e2f0a685" kind="typedef"><name>iterator_category</name></member>
    <member refid="structsearch__it_1ab18d9cefef96970606014548fa166514" kind="variable"><name>t</name></member>
    <member refid="structsearch__it_1a38ccae906a5d300780dce4d451deb17f" kind="variable"><name>s</name></member>
    <member refid="structsearch__it_1a4469baa0cfd438036376385f2dd914b0" kind="variable"><name>n</name></member>
    <member refid="structsearch__it_1a46579f4b89ff311a870546f50af638c2" kind="variable"><name>ed</name></member>
    <member refid="structsearch__it_1a8cf3aec16419ecf395c43b43202ffb60" kind="variable"><name>p</name></member>
    <member refid="structsearch__it_1a72ea4698639a3fedc737de70319d72eb" kind="variable"><name>i</name></member>
    <member refid="structsearch__it_1ad6180023d90fa2b55c0efece83b5c055" kind="variable"><name>o</name></member>
    <member refid="structsearch__it_1a734b63a53fc42bdf87d06bdf420af261" kind="function"><name>search_it</name></member>
    <member refid="structsearch__it_1aefe859f1cfc5ae1745baeabe41cd7a83" kind="function"><name>search_it</name></member>
    <member refid="structsearch__it_1af8d68beb8a634f1d6c15d8531360a08f" kind="function"><name>operator*</name></member>
    <member refid="structsearch__it_1a33dc3ba18c2a273db02fc12ad1ea64e6" kind="function"><name>operator++</name></member>
  </compound>
  <compound refid="structseg" kind="struct"><name>seg</name>
    <member refid="structseg_1ac4dfdbae549be2afbd65fb4ba79c71df" kind="typedef"><name>T</name></member>
    <member refid="structseg_1ad581224128223063bf41930f7d1143f7" kind="variable"><name>id</name></member>
    <member refid="structseg_1aee612dceef417b2d76fcf2cf2a560852" kind="variable"><name>def</name></member>
    <member refid="structseg_1aec39c86816f724381919a788bb6e899e" kind="variable"><name>n</name></member>
    <member refid="structseg_1aad9da220752b136fa737498955050354" kind="variable"><name>a</name></member>
    <member refid="structseg_1ae151eed87c688785b0071279a82f0a59" kind="variable"><name>z</name></member>
    <member refid="structseg_1a71b2f9f35c3edacf1a431f8ab6b1b952" kind="function"><name>seg</name></member>
    <member refid="structseg_1abe9e9d5eca61fc8414635dd7f6c2cce3" kind="function"><name>fix</name></member>
    <member refid="structseg_1a47c33b5e0170ed5349eb68520ee245c6" kind="function"><name>down</name></member>
    <member refid="structseg_1a2eeb3a79f56b3825b357682187ae61b9" kind="function"><name>gt</name></member>
    <member refid="structseg_1a0a0354d9f2ef32bd1f87c46de283c67b" kind="function"><name>up</name></member>
  </compound>
  <compound refid="structseg2" kind="struct"><name>seg2</name>
    <member refid="structseg2_1a95e4432be7b55a0e088994978e6437a1" kind="variable"><name>op</name></member>
    <member refid="structseg2_1a17a1d478c854b167aaca8d33283e7082" kind="variable"><name>id</name></member>
    <member refid="structseg2_1a86d3b7930178a162f1fd32ca5dfe509f" kind="variable"><name>n</name></member>
    <member refid="structseg2_1a5583f10d50c68678e881587dd9116aaf" kind="variable"><name>ro</name></member>
    <member refid="structseg2_1ae12c89dbd56719d18ecdf387fa7352b7" kind="variable"><name>h</name></member>
    <member refid="structseg2_1addbfd656c176994b7019ed2990bc5b03" kind="variable"><name>l</name></member>
    <member refid="structseg2_1a77a3a7274fdb739fc52b4215e45f5735" kind="variable"><name>r</name></member>
    <member refid="structseg2_1a79d45741dfbd3393b16a1a2529d59bf7" kind="variable"><name>def</name></member>
    <member refid="structseg2_1aa4a805dbfc4482dcb84d65bbc2c0da91" kind="function"><name>seg2</name></member>
    <member refid="structseg2_1a58ad2a794b63e208c386987ba7e0ac9d" kind="function"><name>mid</name></member>
    <member refid="structseg2_1afdf227899a92d38834ddc9caa6de2c2f" kind="function"><name>dis</name></member>
    <member refid="structseg2_1afbcc6d580ba32864d8a170fdf360dadd" kind="function"><name>over</name></member>
    <member refid="structseg2_1a33fb24e03fa2b90f3dabac5c485b7b01" kind="function"><name>down</name></member>
    <member refid="structseg2_1a7ef694069f72f00e87d404ad533ad30c" kind="function"><name>gt</name></member>
    <member refid="structseg2_1a2c72a97ed68c2e590b00ed1d48444c43" kind="function"><name>gt</name></member>
    <member refid="structseg2_1ab3e8846e557fb6fbf36396bcf5a74f41" kind="function"><name>gt</name></member>
    <member refid="structseg2_1ae857420dbe326c5a67bb5a4e95c0e884" kind="function"><name>up</name></member>
    <member refid="structseg2_1a63ce6762943493718ad2fb6796ce2458" kind="function"><name>up</name></member>
    <member refid="structseg2_1a8fce86584ae8e479f89b2f94b65d38cd" kind="function"><name>up</name></member>
  </compound>
  <compound refid="structseg__base" kind="struct"><name>seg_base</name>
    <member refid="structseg__base_1ad05224442279f2966fdbfc335ac3fa12" kind="function"><name>v</name></member>
    <member refid="structseg__base_1a01e5b733416c3317cf4772b1562a397d" kind="function"><name>ok</name></member>
    <member refid="structseg__base_1aeee601535b14981decb6c71b1288cfc3" kind="function"><name>seg_base</name></member>
  </compound>
  <compound refid="structseg__base_3_01no__impl_3_01T_01_4_01_4" kind="struct"><name>seg_base&lt; no_impl&lt; T &gt; &gt;</name>
    <member refid="structseg__base_3_01no__impl_3_01T_01_4_01_4_1a2ba58d2c0f5bf9131d5d4e5eea473f3b" kind="variable"><name>v_</name></member>
    <member refid="structseg__base_3_01no__impl_3_01T_01_4_01_4_1ae01d4305c38ee7d28f71aa0e7be1cb84" kind="function"><name>v</name></member>
    <member refid="structseg__base_3_01no__impl_3_01T_01_4_01_4_1a00c7c5560040884839cf799196cf4d31" kind="function"><name>ok</name></member>
    <member refid="structseg__base_3_01no__impl_3_01T_01_4_01_4_1a3e2438a2d9c9eace44420cd01c44a446" kind="function"><name>seg_base</name></member>
  </compound>
  <compound refid="structsize__data" kind="struct"><name>size_data</name>
    <member refid="structsize__data_1a80d59df6df3a4dd01fdf8b3919785ecc" kind="variable"><name>size</name></member>
  </compound>
  <compound refid="structSplayTree" kind="struct"><name>SplayTree</name>
    <member refid="structSplayTree_1a6420512e79937fd59edb2a595f977750" kind="variable"><name>root</name></member>
    <member refid="structSplayTree_1a4db3a3ba8655169a636ca73c4a88cc15" kind="variable"><name>sz</name></member>
    <member refid="structSplayTree_1a83684091424cc8dab08bba29cacfc6df" kind="function"><name>SplayTree</name></member>
    <member refid="structSplayTree_1a9e4c104df4c96bec374dc45246a3d0dd" kind="function"><name>~SplayTree</name></member>
    <member refid="structSplayTree_1a68ee8070ca751318c345c2ec728b6003" kind="function"><name>insert</name></member>
    <member refid="structSplayTree_1a9885fe15adae36e69006e8e2e2e5e21c" kind="function"><name>insert</name></member>
    <member refid="structSplayTree_1a31e65260a6cc94aab86c6a3def846830" kind="function"><name>erase</name></member>
    <member refid="structSplayTree_1afb833e454430e81bb3b1442237805320" kind="function"><name>erase</name></member>
    <member refid="structSplayTree_1a0fce64ec0ca10d1774cd24d4c98edf1c" kind="function"><name>split</name></member>
    <member refid="structSplayTree_1a875c802868fd4e94282efdedd86cb772" kind="function"><name>find</name></member>
    <member refid="structSplayTree_1a67cc9fe4b6d6c9e2167701c982fcefb8" kind="function"><name>size</name></member>
    <member refid="structSplayTree_1a4b5e196ef6ecd49b08cd405a30ee6a6b" kind="function"><name>empty</name></member>
    <member refid="structSplayTree_1aec1d30f8e415fe8e5946e524d27c1ad6" kind="function"><name>begin</name></member>
    <member refid="structSplayTree_1a45302c7001ad3e2564ac91ccd7dd9a0c" kind="function"><name>end</name></member>
    <member refid="structSplayTree_1ac70b4b2c0a50a56f2984a1dfb332649a" kind="function"><name>destroy</name></member>
    <member refid="structSplayTree_1a8410ea1b66aeee0e07f11ec02dae2fa6" kind="function"><name>attach</name></member>
    <member refid="structSplayTree_1a06fae4dd156688ed46976373f21fbb26" kind="function"><name>side</name></member>
    <member refid="structSplayTree_1a167b770118895382687c93f9715a6879" kind="function"><name>rotate</name></member>
    <member refid="structSplayTree_1a88e940e01fba29d4f1eec8b8b5fb2cea" kind="function"><name>splay</name></member>
    <member refid="structSplayTree_1a879ddfc2ee6ff265e98ae1cfa851ff3e" kind="function"><name>extremum</name></member>
    <member refid="structSplayTree_1a17f97eb4546fb9a2c182c5f6b2061395" kind="function"><name>join</name></member>
  </compound>
  <compound refid="structtimer" kind="struct"><name>timer</name>
    <member refid="structtimer_1ade8e2872a3c7b23090970780c155dc41" kind="variable"><name>t1</name></member>
    <member refid="structtimer_1ae536faf93e02933cd025a6fbcbb48d0a" kind="function"><name>timer</name></member>
    <member refid="structtimer_1aee05958ea6b0fbf36ea1fd22747cd546" kind="function"><name>~timer</name></member>
  </compound>
  <compound refid="structtreap" kind="struct"><name>treap</name>
    <member refid="structtreap_1af2bfe5a63eacc6519650e20655e9779f" kind="variable"><name>l</name></member>
    <member refid="structtreap_1a4556aec43b8662ca209dc29fd1b2ae27" kind="variable"><name>r</name></member>
    <member refid="structtreap_1a44d79f0b2ed82d18375892821cf2d08e" kind="variable"><name>pri</name></member>
    <member refid="structtreap_1a6297c128b8cc434f2cb5110ea61368c1" kind="variable"><name>key</name></member>
    <member refid="structtreap_1ab40ce02fc95a404710848a91512ecc9e" kind="variable"><name>data</name></member>
    <member refid="structtreap_1adf92c9b58f215038c2ddb286124d1f1a" kind="variable"><name>rev</name></member>
    <member refid="structtreap_1af0c6230acc49fe4a276950fd1934463b" kind="function"><name>treap</name></member>
  </compound>
  <compound refid="classtrie__node" kind="class"><name>trie_node</name>
    <member refid="classtrie__node_1a8a5a034c5e09d9f1ed0307cb2ce6758d" kind="variable"><name>adj</name></member>
    <member refid="classtrie__node_1ab5483871293ea5ff653fb5ab13cca7b7" kind="variable"><name>start</name></member>
    <member refid="classtrie__node_1a0fb3e91481b6fd2e193c887407b8beab" kind="variable"><name>end</name></member>
    <member refid="classtrie__node_1a44aa3351a7f4337adf7710a33d2c0782" kind="function"><name>trie_node</name></member>
    <member refid="classtrie__node_1af112063ca35456025fc3c5162584776c" kind="function"><name>operator[]</name></member>
    <member refid="classtrie__node_1aa2c00e21f01b509e594e405c4feb0ff9" kind="function"><name>build_trie</name></member>
  </compound>
  <compound refid="structwith" kind="struct"><name>with</name>
    <member refid="structwith_1aac8393894f6a5ae26f7573d58d4b6c14" kind="variable"><name>old</name></member>
    <member refid="structwith_1a31cd79dba1d03bdd042e1fda6978da41" kind="variable"><name>v</name></member>
    <member refid="structwith_1a57a2ecba97c092a98b37db9d713f7b38" kind="function"><name>with</name></member>
    <member refid="structwith_1a77e07c1f4c1ecd00db6fcb2dcb18cf6b" kind="function"><name>~with</name></member>
  </compound>
  <compound refid="namespacechrono" kind="namespace"><name>chrono</name>
  </compound>
  <compound refid="namespaceexperimental" kind="namespace"><name>experimental</name>
  </compound>
  <compound refid="namespacefix" kind="namespace"><name>fix</name>
    <member refid="namespacefix_1aa1dbc2d92b97d52f7b70dee2535b7e94" kind="function"><name>fix</name></member>
  </compound>
  <compound refid="namespaceliterals" kind="namespace"><name>literals</name>
  </compound>
  <compound refid="namespaceplaceholders" kind="namespace"><name>placeholders</name>
  </compound>
  <compound refid="namespacestd" kind="namespace"><name>std</name>
    <member refid="geometry_8hpp_1a71b653e8feee4fdabf84841ac545b445" kind="function"><name>operator&lt;</name></member>
    <member refid="io_8hpp_1a40cf53faa8f3a9512c4dad9945ecb425" kind="function"><name>operator&lt;&lt;</name></member>
    <member refid="io_8hpp_1a1920aa20adebf218cbbdf8bb06a4c351" kind="function"><name>operator&lt;&lt;</name></member>
    <member refid="io_8hpp_1a26ed2eacd641d0bb463e15dd04d3dd63" kind="function"><name>operator&lt;&lt;</name></member>
    <member refid="my__int_8hpp_1a9c62d70a4d570035afd252221695db29" kind="function"><name>operator+</name></member>
  </compound>
  <compound refid="namespacethis__thread" kind="namespace"><name>this_thread</name>
  </compound>
  <compound refid="2sat_8hpp" kind="file"><name>2sat.hpp</name>
    <member refid="2sat_8hpp_1aab122b9926a6b55217e5542e400a6bae" kind="function"><name>sat2</name></member>
    <member refid="2sat_8hpp_1ae65df9939b591697fda3629f42cb8ec7" kind="function"><name>test_sat2</name></member>
  </compound>
  <compound refid="big__integer_8hpp" kind="file"><name>big_integer.hpp</name>
    <member refid="big__integer_8hpp_1ab1c01ea11cd355eaa2c477d43ffc120b" kind="function"><name>operator&lt;&lt;</name></member>
  </compound>
  <compound refid="combinatorics_8hpp" kind="file"><name>combinatorics.hpp</name>
    <member refid="combinatorics_8hpp_1ada068dc4f9ea18a98ff58cb8b0be93c9" kind="function"><name>perm</name></member>
    <member refid="combinatorics_8hpp_1aed30b4e386e3e22247cd9d6aecc1e88f" kind="function"><name>fact</name></member>
    <member refid="combinatorics_8hpp_1a4d8eda9d63610214a1eb9b92a51443d1" kind="function"><name>choose</name></member>
  </compound>
  <compound refid="core_8hpp" kind="file"><name>core.hpp</name>
    <member refid="core_8hpp_1a8de3ed741dadc9c979a4ff17c0a9116e" kind="define"><name>NDEBUG</name></member>
    <member refid="core_8hpp_1a49bc164f30e64702250d2cbea09bf86c" kind="define"><name>dbg</name></member>
    <member refid="core_8hpp_1af89ff58234ca2a9be334ad95798b5da7" kind="define"><name>BEGIN_NS</name></member>
    <member refid="core_8hpp_1a42155fc7b646b2b5651b69a5fc8bf701" kind="define"><name>END_NS</name></member>
    <member refid="core_8hpp_1a9d597f42af7d85fd96c46aa17cc610d9" kind="define"><name>fo</name></member>
    <member refid="core_8hpp_1a7b724588414fb77283c807a1ad82313c" kind="define"><name>fr</name></member>
    <member refid="core_8hpp_1ab025e87040bd241c89f5a880c12fc80c" kind="define"><name>tp</name></member>
    <member refid="core_8hpp_1a6779ef315f4a9c289636c8f466c823e3" kind="define"><name>tm</name></member>
    <member refid="core_8hpp_1a50383951d2a9d4f1a855b2cec5e03274" kind="define"><name>this</name></member>
    <member refid="core_8hpp_1a2f9ddbc7133cc3a48efbc824006bd3cb" kind="define"><name>al</name></member>
    <member refid="core_8hpp_1a64daeab6d74dffeca723fbb620b687cb" kind="define"><name>I</name></member>
    <member refid="core_8hpp_1a276c5a0e984cf60015b27252fe04fe6b" kind="define"><name>pb</name></member>
    <member refid="core_8hpp_1aff943633016deb6c62a519ffe92c6819" kind="define"><name>vc</name></member>
    <member refid="core_8hpp_1a7f10cc81a560bb73b2eb647dfb10c9db" kind="define"><name>rel_assert</name></member>
    <member refid="core_8hpp_1a108d6c5c51dd46e82a62b262394f0242" kind="define"><name>WARN</name></member>
    <member refid="core_8hpp_1ad47194c03eba4b38147c9d01c0166802" kind="define"><name>TODO</name></member>
    <member refid="core_8hpp_1a38dec4d2a6700e0c88ced9eeebb3dfaa" kind="define"><name>paste2</name></member>
    <member refid="core_8hpp_1a396f7338a30cd5803df5ae220da88711" kind="define"><name>paste</name></member>
    <member refid="core_8hpp_1a5f81e19fe0a4c7a463bf91e49e641270" kind="define"><name>lets_count</name></member>
    <member refid="core_8hpp_1a30d2d6ecdd50cafce635775b6e4e1cf2" kind="define"><name>let</name></member>
    <member refid="core_8hpp_1a7796040cab730b2436f078c78d117cab" kind="define"><name>import</name></member>
    <member refid="core_8hpp_1a1a5cedaa2166b87bc174d54c6a9aae47" kind="define"><name>df</name></member>
    <member refid="core_8hpp_1a652d32737dbd89449a99ce6a41dae81f" kind="define"><name>ostream</name></member>
    <member refid="core_8hpp_1a583d558126ab02babe89a77ae06a4156" kind="typedef"><name>lli</name></member>
    <member refid="core_8hpp_1aa5114a4fed348a29fb92123470476b1b" kind="typedef"><name>ull</name></member>
    <member refid="core_8hpp_1a8634e9b99169b29bc9a86927e715da54" kind="typedef"><name>vl</name></member>
    <member refid="core_8hpp_1a2e2e73e53fc509e05f252ef083503838" kind="typedef"><name>ld</name></member>
    <member refid="core_8hpp_1a58e2677d80a09b5be0f0e56ef70d4507" kind="typedef"><name>pr</name></member>
    <member refid="core_8hpp_1ac6774acaa7fff278845893bd84e35525" kind="typedef"><name>com</name></member>
    <member refid="core_8hpp_1aaf26cd2ec4fe33a7b7601fe9386cd44e" kind="typedef"><name>pt</name></member>
    <member refid="core_8hpp_1a52c977d91e62bd8e617e5cb2926547e1" kind="typedef"><name>bt</name></member>
    <member refid="core_8hpp_1a1d04d13bbae0dc608f2d47771a2ef783" kind="typedef"><name>pq</name></member>
    <member refid="core_8hpp_1a71fb2247d044e41f5345bcdb26020926" kind="typedef"><name>clock_</name></member>
    <member refid="core_8hpp_1a9925e7a8568cf11b8431a0e634ada482" kind="typedef"><name>um</name></member>
    <member refid="core_8hpp_1aa021995764a0c77f628e3411497239cc" kind="variable"><name>debug_mode</name></member>
    <member refid="core_8hpp_1a10aff294e2147e1cfe921bc2648b4399" kind="variable"><name>lets</name></member>
    <member refid="core_8hpp_1aa3bd6940ab68cd10b31ac2ff2495ffab" kind="variable"><name>_l__COUNTER__</name></member>
    <member refid="core_8hpp_1ab89b6ceb8bf54011eedd872b54361eca" kind="variable"><name>inf</name></member>
    <member refid="core_8hpp_1a6a2dbe8e1a58258f9060682cf7ea063b" kind="variable"><name>delim</name></member>
    <member refid="core_8hpp_1a989a29f26fc8591b33ecf33d4d2c7029" kind="variable"><name>tau</name></member>
    <member refid="core_8hpp_1a5da77c5a58b4193f997d91f2130efd53" kind="variable"><name>multitest</name></member>
  </compound>
  <compound refid="coroutine_8hpp" kind="file"><name>coroutine.hpp</name>
    <member refid="coroutine_8hpp_1a07a24840ac2854166f541e047362d0bf" kind="define"><name>CO_SWITCH</name></member>
    <member refid="coroutine_8hpp_1a1672ec864a13c8374fa9bfc6595e67d6" kind="define"><name>cobegin</name></member>
    <member refid="coroutine_8hpp_1a904227d8e8b2e67adef1e140e9990a5c" kind="define"><name>coend</name></member>
    <member refid="coroutine_8hpp_1a40b2517161c64f0179823b67d4af0242" kind="define"><name>coreturn</name></member>
    <member refid="coroutine_8hpp_1a66452cd96cc7e445f9d343e47d1afefa" kind="function"><name>coro</name></member>
  </compound>
  <compound refid="debug_8hpp" kind="file"><name>debug.hpp</name>
    <member refid="debug_8hpp_1a43b9ff3e4bd66776708803ea8431e95f" kind="variable"><name>depth</name></member>
    <member refid="debug_8hpp_1ae23bfdc9a034bac8e1c722626e7cc983" kind="function"><name>tm</name></member>
    <member refid="debug_8hpp_1a92c8e980174e4094a7a8a3cf8343a02b" kind="function"><name>replace</name></member>
    <member refid="debug_8hpp_1aa310d6d6fd9f39ae8d81d5513865c0ec" kind="function"><name>simple_tp</name></member>
    <member refid="debug_8hpp_1ae380e8dcf60bf3dcb52ecf63b2e8d903" kind="function"><name>debug</name></member>
  </compound>
  <compound refid="dsu_8hpp" kind="file"><name>dsu.hpp</name>
    <member refid="dsu_8hpp_1a79371d6c744abc293ad7db7766b1b997" kind="function"><name>operator&lt;&lt;</name></member>
  </compound>
  <compound refid="fft_8hpp" kind="file"><name>fft.hpp</name>
    <member refid="fft_8hpp_1a27632dcb2490189a02cc98a2029a4be3" kind="function"><name>fft</name></member>
    <member refid="fft_8hpp_1af359fe1ab295171c84c1da7bdfc95018" kind="function"><name>ifft</name></member>
    <member refid="fft_8hpp_1ad433b30dd657e617f55a72340fcefd4a" kind="function"><name>conv</name></member>
  </compound>
  <compound refid="fix_8py" kind="file"><name>fix.py</name>
  </compound>
  <compound refid="geometry_8hpp" kind="file"><name>geometry.hpp</name>
    <member refid="geometry_8hpp_1a3a11abcc4197ec78b28351e3eed5be89" kind="function"><name>dot</name></member>
    <member refid="geometry_8hpp_1a39bd99d30f0161c6653cc30527741cef" kind="function"><name>wedge</name></member>
    <member refid="geometry_8hpp_1af97237cbfd8361bffc2d971fd75b4c51" kind="function"><name>area</name></member>
    <member refid="geometry_8hpp_1a701ea24ac7922f0e0f6e73ffa4d09a51" kind="function"><name>ccw</name></member>
    <member refid="geometry_8hpp_1a0b6c2daaffdebeec1ac633cff83d9594" kind="function"><name>hull</name></member>
    <member refid="geometry_8hpp_1a3e644172c556a84fa2c65aa39e99cea5" kind="function"><name>convex_min</name></member>
  </compound>
  <compound refid="graph__theory_8hpp" kind="file"><name>graph_theory.hpp</name>
    <member refid="graph__theory_8hpp_1a587d93d28f9f4517fa136b09fd721a68" kind="define"><name>searcher</name></member>
    <member refid="graph__theory_8hpp_1a876c191f8c72538f5b74fc1de66571af" kind="function"><name>operator&lt;</name></member>
    <member refid="graph__theory_8hpp_1a18e4531fb24d91bacaab3071e73938f5" kind="function"><name>operator&lt;&lt;</name></member>
    <member refid="graph__theory_8hpp_1a75115f1ba36186dc32ecb102a399508a" kind="function"><name>dist</name></member>
    <member refid="graph__theory_8hpp_1a1fd40cc212c57c5abe8872fe2f90a1e6" kind="function"><name>dist</name></member>
    <member refid="graph__theory_8hpp_1ad13100084f2ab4fa87a96eb6baaab424" kind="function"><name>mst</name></member>
    <member refid="graph__theory_8hpp_1a6ed45f64f1378ebb531ad28483501ebf" kind="function"><name>trans</name></member>
    <member refid="graph__theory_8hpp_1a93d1a20d68db74c43261dd28201eb875" kind="function"><name>scc</name></member>
    <member refid="graph__theory_8hpp_1a5ed86477f2614adcf2b123f8a530a75b" kind="function"><name>bipartite</name></member>
    <member refid="graph__theory_8hpp_1a838f63e24db10d9e165fd191b3cc2e05" kind="function"><name>max_match</name></member>
    <member refid="graph__theory_8hpp_1a010bc7128795883d7fa391f33f8c67e0" kind="function"><name>add_edge</name></member>
    <member refid="graph__theory_8hpp_1a5f6185d1499a6bd321a7841e23001caa" kind="function"><name>graph_in</name></member>
  </compound>
  <compound refid="io_8hpp" kind="file"><name>io.hpp</name>
    <member refid="io_8hpp_1ab13ab1059a1675ee7a774c4524b84d23" kind="function"><name>operator&lt;&lt;</name></member>
    <member refid="io_8hpp_1a7df52f31e81b51a76e8f8699accaf3b1" kind="function"><name>operator&gt;&gt;</name></member>
    <member refid="io_8hpp_1affce1f2cffc83e9e4ecc9203fdd32d29" kind="function"><name>operator&lt;&lt;</name></member>
    <member refid="io_8hpp_1a1b122fd1e3de03a421d98f4bbb1473d5" kind="function"><name>print</name></member>
  </compound>
  <compound refid="linear__algebra_8hpp" kind="file"><name>linear_algebra.hpp</name>
    <member refid="linear__algebra_8hpp_1a869262492de32bc50ba1ae957607d69b" kind="function"><name>operator*</name></member>
    <member refid="linear__algebra_8hpp_1a19f0f5824555e4b22a1636e87f97d266" kind="function"><name>gauss</name></member>
    <member refid="linear__algebra_8hpp_1a82bf14f941e0f3e3c902ca1ea63b7a2d" kind="function"><name>operator/</name></member>
    <member refid="linear__algebra_8hpp_1a9bca95617a7712fbff5e543cf1cef977" kind="function"><name>det</name></member>
    <member refid="linear__algebra_8hpp_1a9f304d5517398e00f1ba9c13317c07b8" kind="function"><name>operator&lt;&lt;</name></member>
    <member refid="linear__algebra_8hpp_1ae3cd3eded530a14682cf9a4ca4d17f51" kind="function"><name>lin_recur</name></member>
    <member refid="linear__algebra_8hpp_1ac334a92cbd04265f52708e07af9487e3" kind="function"><name>test_matrix</name></member>
  </compound>
  <compound refid="main_8hpp" kind="file"><name>main.hpp</name>
    <member refid="main_8hpp_1acf30f45bb690161eda6eb343b019d6e7" kind="variable"><name>in</name></member>
    <member refid="main_8hpp_1af095a232149097b5605064623a9345ac" kind="function"><name>main2</name></member>
    <member refid="main_8hpp_1a0ddf1224851353fc92bfbff6f499fa97" kind="function"><name>main</name></member>
  </compound>
  <compound refid="modulo_8hpp" kind="file"><name>modulo.hpp</name>
    <member refid="modulo_8hpp_1a5caab15f8b74a132460ac94fa9dab4a7" kind="variable"><name>M</name></member>
    <member refid="modulo_8hpp_1a18e6bf3063c827da07de67653546a850" kind="function"><name>power</name></member>
    <member refid="modulo_8hpp_1a7c033112eaf35800262e02ff27188e22" kind="function"><name>operator+</name></member>
    <member refid="modulo_8hpp_1a17100f55f940d2da859920ff8783fc92" kind="function"><name>operator++</name></member>
    <member refid="modulo_8hpp_1aad02e0b47914b218083228d7ccd23076" kind="function"><name>operator-</name></member>
    <member refid="modulo_8hpp_1a0643abd64cbdf649cb7d2d1d10185b17" kind="function"><name>operator==</name></member>
    <member refid="modulo_8hpp_1a739129162899ff43a39303d29bd964dd" kind="function"><name>operator*</name></member>
    <member refid="modulo_8hpp_1ae515d341b4d4ed9e65ab11d85566dcb5" kind="function"><name>operator/</name></member>
    <member refid="modulo_8hpp_1ae2ca0fa4d4eb7f16638e75e1ba234ea4" kind="function"><name>operator/</name></member>
    <member refid="modulo_8hpp_1ad6ef17134f6c5b63ed687fe46a62e2d7" kind="function"><name>operator&lt;&lt;</name></member>
    <member refid="modulo_8hpp_1af63abc641089d55f193ed28ed00f7eaa" kind="function"><name>test_power</name></member>
    <member refid="modulo_8hpp_1af249c063d4cee0dc930796b8728265e0" kind="function"><name>test_md</name></member>
    <member refid="modulo_8hpp_1ace704e27d561de2f121af8778c37d2d4" kind="function"><name>test_modulo</name></member>
  </compound>
  <compound refid="my__int_8hpp" kind="file"><name>my_int.hpp</name>
    <member refid="my__int_8hpp_1a2e3fb564092d70d9bee87555035d8711" kind="define"><name>aug</name></member>
    <member refid="my__int_8hpp_1a896acbe39c98c053f809a8001774ab6f" kind="define"><name>opi</name></member>
    <member refid="my__int_8hpp_1a6f517c16e8b3947a66f2bf27bc3173e9" kind="define"><name>MIX128</name></member>
    <member refid="my__int_8hpp_1a36d34dc408fc2b97bca91bf466563f18" kind="define"><name>mix1</name></member>
    <member refid="my__int_8hpp_1a7ab6bf7557d5b999f7339d4cfc7cb4b6" kind="define"><name>mix</name></member>
    <member refid="my__int_8hpp_1abb7191c40253fd9cd6cd664fd6db5271" kind="define"><name>mixll</name></member>
    <member refid="my__int_8hpp_1a2c978e12b0aa097e3f8dc633e68451d7" kind="define"><name>bill</name></member>
    <member refid="my__int_8hpp_1a33e977ac03b44c7fb6b3f74dae8b2eb6" kind="define"><name>inh</name></member>
    <member refid="my__int_8hpp_1a141476c36a8f609ac7c776be162abb92" kind="function"><name>operator+=</name></member>
    <member refid="my__int_8hpp_1a566f5b78944cfa1ff2b470ecd0522ce1" kind="function"><name>operator-=</name></member>
    <member refid="my__int_8hpp_1ac66e5f2d4fb3a7d5076a44e419736713" kind="function"><name>operator*=</name></member>
    <member refid="my__int_8hpp_1a35c5f7ec97de94c93f2301e16d3f7efa" kind="function"><name>operator/=</name></member>
    <member refid="my__int_8hpp_1adc9ca497c254909c83f973aa03b0e1c4" kind="function"><name>operator+</name></member>
    <member refid="my__int_8hpp_1af2b3846e8acafcb6f3213db0c0036252" kind="function"><name>operator*</name></member>
    <member refid="my__int_8hpp_1aaa2f10d451711a02282b53f8d67322a9" kind="function"><name>operator|</name></member>
    <member refid="my__int_8hpp_1a9b2eee581ee9ecf1605147ab0c35c575" kind="function"><name>operator&amp;</name></member>
    <member refid="my__int_8hpp_1ac6d529776051928bfb80844daec345a9" kind="function"><name>operator^</name></member>
    <member refid="my__int_8hpp_1a0516ee37ba1334020c90320aedd2392b" kind="function"><name>operator&lt;&lt;</name></member>
    <member refid="my__int_8hpp_1a969b32b65ba433b56130ae656df66052" kind="function"><name>operator&gt;&gt;</name></member>
    <member refid="my__int_8hpp_1a16edb2064180aa002b50c0df6971ac76" kind="function"><name>operator/</name></member>
    <member refid="my__int_8hpp_1a1ad47cb4e54d783e97787f2d8180b26b" kind="function"><name>operator&lt;</name></member>
    <member refid="my__int_8hpp_1addc2b513488b556dc2d53112f6c54dcf" kind="function"><name>operator==</name></member>
    <member refid="my__int_8hpp_1a89411724456b37f74a3b6bab8e7a7603" kind="function"><name>operator%</name></member>
    <member refid="my__int_8hpp_1acd91be1fddd6cfafd08f6ec8bb5efcd1" kind="function"><name>operator+</name></member>
    <member refid="my__int_8hpp_1a2f9f062714f104ffaac089296845069a" kind="function"><name>operator+</name></member>
    <member refid="my__int_8hpp_1ac756b87403c4ba471750867eadf8994b" kind="function"><name>operator+</name></member>
    <member refid="my__int_8hpp_1ac6a8fe9e3fde003ba107e264ebad7dca" kind="function"><name>operator+</name></member>
    <member refid="my__int_8hpp_1a89863f5d564a94c728d284514f71a09a" kind="function"><name>operator+</name></member>
    <member refid="my__int_8hpp_1ac1023414d318d3a6439d3a2567399a30" kind="function"><name>operator+</name></member>
    <member refid="my__int_8hpp_1a3b63b23737ed9e91a2b7339f284d96e6" kind="function"><name>operator+</name></member>
    <member refid="my__int_8hpp_1a0da77df2e89895ba1b7d7c562479461c" kind="function"><name>operator+</name></member>
    <member refid="my__int_8hpp_1abb749cbfaa17d7b386e253b603485998" kind="function"><name>operator/</name></member>
    <member refid="my__int_8hpp_1a5596c417bb97bd74960e4cca33d13880" kind="function"><name>operator/</name></member>
    <member refid="my__int_8hpp_1a833e2f67fb010c39008962137d8237ec" kind="function"><name>operator/</name></member>
    <member refid="my__int_8hpp_1aed40130cba94c26f07c02d9eacded7b2" kind="function"><name>operator/</name></member>
    <member refid="my__int_8hpp_1a5f6edf8dca5afc643d6e72e57699730f" kind="function"><name>operator/</name></member>
    <member refid="my__int_8hpp_1a87683aa0c8ee0cdccaead85b3e2b8d90" kind="function"><name>operator/</name></member>
    <member refid="my__int_8hpp_1a9f41bc653534f4f6203630517f2156f6" kind="function"><name>operator/</name></member>
    <member refid="my__int_8hpp_1a142f763bbb1736a76b95130b8d2d8b1a" kind="function"><name>operator/</name></member>
    <member refid="my__int_8hpp_1a5158155b3a836df54586f2350d91cbab" kind="function"><name>operator*</name></member>
    <member refid="my__int_8hpp_1a750ea4d1fdd157fbcb04741a1545f6e6" kind="function"><name>operator*</name></member>
    <member refid="my__int_8hpp_1a169f6ba357752382f1b30e76ecdcb036" kind="function"><name>operator*</name></member>
    <member refid="my__int_8hpp_1a3be6241d1f94d6141fa062918a691ca7" kind="function"><name>operator*</name></member>
    <member refid="my__int_8hpp_1aabc85797b453ca213dbd7abbf945056c" kind="function"><name>operator*</name></member>
    <member refid="my__int_8hpp_1a5612b2793a4532fe9970c5d2a114d6ec" kind="function"><name>operator*</name></member>
    <member refid="my__int_8hpp_1a2a8768cedd8e538507499220371852be" kind="function"><name>operator*</name></member>
    <member refid="my__int_8hpp_1a43ffab71ec13580985a070ea33d08df0" kind="function"><name>operator*</name></member>
    <member refid="my__int_8hpp_1a7c36efcf569faf3715e418d3da1db17a" kind="function"><name>operator&lt;</name></member>
    <member refid="my__int_8hpp_1a87859c8d35163e9e4758aa01fd520407" kind="function"><name>operator&lt;</name></member>
    <member refid="my__int_8hpp_1a4605084592ea2d75848714e17b8ef7dd" kind="function"><name>operator&lt;</name></member>
    <member refid="my__int_8hpp_1ae97b254f1f4f72a9e5b76a44aa054524" kind="function"><name>operator&lt;</name></member>
    <member refid="my__int_8hpp_1a7ea748b99bb21ae495717f64bbdcf4e6" kind="function"><name>operator&lt;</name></member>
    <member refid="my__int_8hpp_1abe88c83cf5dc9b46884a1b2bc8183e68" kind="function"><name>operator&lt;</name></member>
    <member refid="my__int_8hpp_1a7781b25df43bf46926920191911d737b" kind="function"><name>operator&lt;</name></member>
    <member refid="my__int_8hpp_1adb176a0734aa2cfd1449982c44fce144" kind="function"><name>operator&lt;</name></member>
    <member refid="my__int_8hpp_1ad3d70e11768093396bb23339c8ac82eb" kind="function"><name>operator==</name></member>
    <member refid="my__int_8hpp_1a142f9bffdd11b6d2ff259b27ded735b3" kind="function"><name>operator==</name></member>
    <member refid="my__int_8hpp_1afbabea4a994a0389f619733ee918219a" kind="function"><name>operator==</name></member>
    <member refid="my__int_8hpp_1a64e01e17d499b77946c8e688b818466e" kind="function"><name>operator==</name></member>
    <member refid="my__int_8hpp_1ad6c4a2aed28be9e342d2ad975e4136c6" kind="function"><name>operator==</name></member>
    <member refid="my__int_8hpp_1a06a48e329f407c401d7828ad830737f0" kind="function"><name>operator==</name></member>
    <member refid="my__int_8hpp_1a39bfb6bbc475fabc3fedcdbff48a1bcd" kind="function"><name>operator==</name></member>
    <member refid="my__int_8hpp_1a9e5a071bceddccdc70270c68e1c62000" kind="function"><name>operator==</name></member>
    <member refid="my__int_8hpp_1a2f032ec489803d91bbecaf05aeae3d02" kind="function"><name>operator%</name></member>
    <member refid="my__int_8hpp_1a2bbbee53a572ca55acf8c6a9bd23ac31" kind="function"><name>operator%</name></member>
    <member refid="my__int_8hpp_1a147313b2417a691feb391c2baf28c347" kind="function"><name>operator%</name></member>
    <member refid="my__int_8hpp_1abafcc58e81b283ceaaf7af7353ade545" kind="function"><name>operator%</name></member>
    <member refid="my__int_8hpp_1ab7ba6fcd25875e50ba1b4d58c5636df8" kind="function"><name>operator%</name></member>
    <member refid="my__int_8hpp_1ac07363b9ed6f9e81f69ada65d70fb2fe" kind="function"><name>operator%</name></member>
    <member refid="my__int_8hpp_1a5683757111c643b4f25e4bd44c9b43d6" kind="function"><name>operator%</name></member>
    <member refid="my__int_8hpp_1a25b896413f748b4cfea0899dbfe293df" kind="function"><name>operator%</name></member>
    <member refid="my__int_8hpp_1afe67594319f62fc54a00ac97fdcfa7cd" kind="function"><name>operator&amp;</name></member>
    <member refid="my__int_8hpp_1a25cb8d29162de6a8341a162a555178b2" kind="function"><name>operator&amp;</name></member>
    <member refid="my__int_8hpp_1a89d69125633d95c663d59a823193a41d" kind="function"><name>operator&amp;</name></member>
    <member refid="my__int_8hpp_1accbea10bc03027a2abf0b86707e72d60" kind="function"><name>operator&amp;</name></member>
    <member refid="my__int_8hpp_1aa3e03dfc13fb08fd0890e9891f1d270e" kind="function"><name>operator&amp;</name></member>
    <member refid="my__int_8hpp_1a750f758fefe8bcd1883904009607c323" kind="function"><name>operator&amp;</name></member>
    <member refid="my__int_8hpp_1a4d018945906db6aaaec78c6bb25a8d0c" kind="function"><name>operator&amp;</name></member>
    <member refid="my__int_8hpp_1a1dabb22258a4f164313783a15aa92326" kind="function"><name>operator&amp;</name></member>
    <member refid="my__int_8hpp_1adad0fdb7fea444f4b4dc79942382c841" kind="function"><name>operator&gt;&gt;</name></member>
    <member refid="my__int_8hpp_1aab5bf9e75ec2e05f32bfe248f26b2fb2" kind="function"><name>operator&gt;&gt;</name></member>
    <member refid="my__int_8hpp_1acc49ae319222c17e7cf7e595b53eb01b" kind="function"><name>operator&gt;&gt;</name></member>
    <member refid="my__int_8hpp_1aca97a6fb59e04b5702ea11c36f2478d9" kind="function"><name>operator&gt;&gt;</name></member>
    <member refid="my__int_8hpp_1a075c178690dc773422a3aeaf1ffa8173" kind="function"><name>operator&gt;&gt;</name></member>
    <member refid="my__int_8hpp_1a3a78b7a4b3e181f7842b4a3775895d7a" kind="function"><name>operator&gt;&gt;</name></member>
    <member refid="my__int_8hpp_1acca7da4ef13b9d21d66d02bf959f78d0" kind="function"><name>operator&gt;&gt;</name></member>
    <member refid="my__int_8hpp_1a5a9bbf4c8dbe708d702ed219b1caa290" kind="function"><name>operator&gt;&gt;</name></member>
    <member refid="my__int_8hpp_1a5038197ce9c31f52268a7d69042fbeff" kind="function"><name>operator&lt;&lt;</name></member>
    <member refid="my__int_8hpp_1a3bf6f579bb3c901a70403ff474880bea" kind="function"><name>operator&lt;&lt;</name></member>
    <member refid="my__int_8hpp_1a8eb2fa309b61ab53227386a3cf75a491" kind="function"><name>operator&lt;&lt;</name></member>
    <member refid="my__int_8hpp_1a3b06d3d1807c2588bded865be3cdb3b1" kind="function"><name>operator&lt;&lt;</name></member>
    <member refid="my__int_8hpp_1a514556e3fea9889325683b6d0d0b39b9" kind="function"><name>operator&lt;&lt;</name></member>
    <member refid="my__int_8hpp_1aa6336f6e0326e004c4e921f41742977c" kind="function"><name>operator&lt;&lt;</name></member>
    <member refid="my__int_8hpp_1ad4ffdd1b37e291ac1fa1c42f6c6e02f3" kind="function"><name>operator&lt;&lt;</name></member>
    <member refid="my__int_8hpp_1ac45054cf258d397a92db203450fc4e25" kind="function"><name>operator&lt;&lt;</name></member>
    <member refid="my__int_8hpp_1a65931ffae276ba2eac94c8ba0294829b" kind="function"><name>operator&lt;&lt;</name></member>
    <member refid="my__int_8hpp_1aaae12e7c817b90026c27b27fcbd5fa59" kind="function"><name>operator&quot;&quot;M</name></member>
    <member refid="my__int_8hpp_1ab40cf8d960a2bfa49f09a97ed15c056d" kind="function"><name>ceil_div</name></member>
  </compound>
  <compound refid="number__theory_8hpp" kind="file"><name>number_theory.hpp</name>
    <member refid="number__theory_8hpp_1a5e4d8030cfc837ebe1e18d2c764d8bab" kind="variable"><name>divs</name></member>
    <member refid="number__theory_8hpp_1a02e886c6eb18cd3b8894ea2ba9ca9784" kind="function"><name>prime</name></member>
    <member refid="number__theory_8hpp_1a87d7c3ba2489977a16ec40544a918e00" kind="function"><name>test_prime</name></member>
    <member refid="number__theory_8hpp_1af88afa289696363eee6d6caed35edfb5" kind="function"><name>divisors</name></member>
    <member refid="number__theory_8hpp_1a3e935b9aca6e9dfa6b0a8ef9a4c7e153" kind="function"><name>test_divisors</name></member>
    <member refid="number__theory_8hpp_1a08a5d3143912e850f2a0e799c20b7944" kind="function"><name>sieve</name></member>
    <member refid="number__theory_8hpp_1a8119b9949ade11ba2f554e41cc0830df" kind="function"><name>fac</name></member>
    <member refid="number__theory_8hpp_1afcfd3b1e3415393029bc6a496d825459" kind="function"><name>test_fac</name></member>
    <member refid="number__theory_8hpp_1aa6039763e84c50eb24fdee392c581898" kind="function"><name>egcd</name></member>
    <member refid="number__theory_8hpp_1af0753ff92c84e6924e1fd6461e77b16f" kind="function"><name>totient</name></member>
    <member refid="number__theory_8hpp_1a8ae320acad5e35d58ca5ad7adc6ddd78" kind="function"><name>test_totient</name></member>
    <member refid="number__theory_8hpp_1a7fe167e7a6ffd6127f342baf3169d9e9" kind="function"><name>dlog</name></member>
    <member refid="number__theory_8hpp_1a7aac53ce82614d79c7098a1de32ed1e7" kind="function"><name>test_dlog</name></member>
    <member refid="number__theory_8hpp_1a8a159e82910edb282085d6879d8c382d" kind="function"><name>primitive_root</name></member>
    <member refid="number__theory_8hpp_1a0ff115471f41e78245b5dc48eaf8032f" kind="function"><name>test_primitive_root</name></member>
    <member refid="number__theory_8hpp_1aed36f6b8b9706133e9b5302b1618e9ef" kind="function"><name>test_number_theory</name></member>
  </compound>
  <compound refid="operations_8hpp" kind="file"><name>operations.hpp</name>
    <member refid="operations_8hpp_1afcd538daef660984ecb8abf34697904b" kind="define"><name>ret</name></member>
    <member refid="operations_8hpp_1ab4c4b06b1f952a0071d8ae50f97f9788" kind="typedef"><name>uset</name></member>
    <member refid="operations_8hpp_1a391ecbfa26a20f6287fb4048f56b0978" kind="typedef"><name>bin_op</name></member>
    <member refid="operations_8hpp_1ab6822e2f5527212c7db6dd31be7f3ba6" kind="function"><name>operator-</name></member>
    <member refid="operations_8hpp_1a98ed0803268ba29fcc8977206b177923" kind="function"><name>operator!=</name></member>
    <member refid="operations_8hpp_1a1297749985d820e08c6c88a285dc80eb" kind="function"><name>operator&lt;=</name></member>
    <member refid="operations_8hpp_1ae3edbf9ffcbf3c8b40d15f6666442cef" kind="function"><name>operator&gt;=</name></member>
    <member refid="operations_8hpp_1ad8f1353b1f5665443a78d860006e9920" kind="function"><name>operator&gt;</name></member>
    <member refid="operations_8hpp_1a87d3fb5fed45f1a54221f7a8705addb9" kind="function"><name>operator+</name></member>
    <member refid="operations_8hpp_1aec18699b662c408078f232f080606419" kind="function"><name>operator|</name></member>
    <member refid="operations_8hpp_1a7464e219d6fea318d2f4b6843939cd85" kind="function"><name>operator&amp;</name></member>
    <member refid="operations_8hpp_1a6e82ab4b503a3ef3be962c204c72cb9b" kind="function"><name>sub_set</name></member>
    <member refid="operations_8hpp_1a82061a9f3dea98f0a1242c43dfa985a9" kind="function"><name>operator-</name></member>
    <member refid="operations_8hpp_1a74ef5f5d3de3fd62c398c03b00540ac3" kind="function"><name>operator^</name></member>
    <member refid="operations_8hpp_1a7fcf9006b0b6d5ce6b426ac6dea3b567" kind="function"><name>operator*</name></member>
    <member refid="operations_8hpp_1afd72f4b4fdc3e2687e5c4aa6565ee37d" kind="function"><name>operator+</name></member>
    <member refid="operations_8hpp_1ac969ae49524a67aba9be0f061955ef23" kind="function"><name>identity</name></member>
    <member refid="operations_8hpp_1a1927210d55cc1384803f4a609d7174ee" kind="function"><name>identity</name></member>
  </compound>
  <compound refid="persistent_8hpp" kind="file"><name>persistent.hpp</name>
    <member refid="persistent_8hpp_1aee4a906e55578492c8b7d90dd9edba8f" kind="variable"><name>tim</name></member>
    <member refid="persistent_8hpp_1a4666dfbf25b18ab72bed8f906767d938" kind="function"><name>operator&lt;&lt;</name></member>
  </compound>
  <compound refid="program_8cpp" kind="file"><name>program.cpp</name>
    <member refid="program_8cpp_1af095a232149097b5605064623a9345ac" kind="function"><name>main2</name></member>
  </compound>
  <compound refid="queue_8hpp" kind="file"><name>queue.hpp</name>
    <member refid="queue_8hpp_1a3582140b7324e0ea0a09e7b49aff5da4" kind="function"><name>test_queueadaptor</name></member>
    <member refid="queue_8hpp_1a10088901e62ea354d6ae3d8cd9575a05" kind="function"><name>test_minstack</name></member>
    <member refid="queue_8hpp_1ade8983381de2dd15dd63f80934f01827" kind="function"><name>test_minqueue</name></member>
    <member refid="queue_8hpp_1a409d820ae1bf7e9bac41a9258ef79165" kind="function"><name>test_queue</name></member>
  </compound>
  <compound refid="range_8hpp" kind="file"><name>range.hpp</name>
    <member refid="range_8hpp_1a198fc8d7aeb577c1c390bbf3cf9ade86" kind="define"><name>bin</name></member>
    <member refid="range_8hpp_1a3642ae4ffe47e0d16c399aead9674f78" kind="enum"><name>isect</name></member>
    <member refid="range_8hpp_1a3642ae4ffe47e0d16c399aead9674f78af9a713ed26dee661a259730e650987e4" kind="enumvalue"><name>null</name></member>
    <member refid="range_8hpp_1a3642ae4ffe47e0d16c399aead9674f78ac667beae9e87c3d08798cd0a05efc536" kind="enumvalue"><name>dis</name></member>
    <member refid="range_8hpp_1a3642ae4ffe47e0d16c399aead9674f78a77dcb2124006c2c1902d0f49f75eacdc" kind="enumvalue"><name>over</name></member>
    <member refid="range_8hpp_1a3642ae4ffe47e0d16c399aead9674f78a37a1cc6c35e50ff31a8bda2d00998c1e" kind="enumvalue"><name>cont</name></member>
    <member refid="range_8hpp_1a3642ae4ffe47e0d16c399aead9674f78ac1400642bc856b68972da1ae5e7a1015" kind="enumvalue"><name>eq</name></member>
    <member refid="range_8hpp_1a6288a170c5a67a2c0b45c858a043722a" kind="typedef"><name>ra</name></member>
    <member refid="range_8hpp_1a2a9660e705c73071a9c68c86e5e92e29" kind="function"><name>operator==</name></member>
    <member refid="range_8hpp_1adf37877debb40c87ce158743d128a8df" kind="function"><name>operator&lt;</name></member>
    <member refid="range_8hpp_1a5b1fcbc62cc963f6ab2598b13f114dd8" kind="function"><name>operator&lt;</name></member>
    <member refid="range_8hpp_1a295cbb09d532a8eeeaab519fd1db0928" kind="function"><name>operator&amp;</name></member>
    <member refid="range_8hpp_1af05d016fe174cf99a33f4ddac30c9b05" kind="function"><name>rev</name></member>
    <member refid="range_8hpp_1acb6120c8a8224e1d4465bf980bc01d07" kind="function"><name>operator+</name></member>
    <member refid="range_8hpp_1a8b072587149274d1639908e4edb23d3d" kind="function"><name>operator-</name></member>
    <member refid="range_8hpp_1a5eeb4818d038580518b4e590a066ec12" kind="function"><name>intersect</name></member>
    <member refid="range_8hpp_1a2e6b26fca3ba13b074816e7b97f8245d" kind="function"><name>operator^</name></member>
    <member refid="range_8hpp_1a3eb62dcf88ab5afad4d62c6fea4bb570" kind="function"><name>filter</name></member>
  </compound>
  <compound refid="README_8md" kind="file"><name>README.md</name>
  </compound>
  <compound refid="segment__tree_8hpp" kind="file"><name>segment_tree.hpp</name>
    <member refid="segment__tree_8hpp_1adff0a7b40e9b24ea63a29da40e60da96" kind="define"><name>sig</name></member>
    <member refid="segment__tree_8hpp_1a38bf1e5e0427bdeba2b469eea9befc23" kind="define"><name>v</name></member>
    <member refid="segment__tree_8hpp_1af1f6f68ae3982192886e37d50ba0d9e2" kind="define"><name>do_lazy</name></member>
    <member refid="segment__tree_8hpp_1adff0a7b40e9b24ea63a29da40e60da96" kind="define"><name>sig</name></member>
    <member refid="segment__tree_8hpp_1a962063b214f65a5ee40a74f768d237a7" kind="typedef"><name>mypers</name></member>
    <member refid="segment__tree_8hpp_1aa4cefbed832d0d4d4cfb40f2341e9a2e" kind="typedef"><name>mylazy</name></member>
    <member refid="segment__tree_8hpp_1aea41afc9d2c06ef4ab4b3b44a683ccb4" kind="variable"><name>identity</name></member>
    <member refid="segment__tree_8hpp_1a5725dc99f2c2e7ba7ab0c73860df2554" kind="function"><name>operator&lt;&lt;</name></member>
    <member refid="segment__tree_8hpp_1aee065d5582449ca9f96b80c630882b7a" kind="function"><name>up_inv</name></member>
    <member refid="segment__tree_8hpp_1ae93006ee49e9655fd20f39aaf5743581" kind="function"><name>gl</name></member>
    <member refid="segment__tree_8hpp_1a2747683868ad04194c67440ba2aea330" kind="function"><name>gr</name></member>
    <member refid="segment__tree_8hpp_1acb311db76dac96d5345a6f25d934898d" kind="function"><name>gl</name></member>
    <member refid="segment__tree_8hpp_1a7887b5dfaf56f18b18402b32f600659b" kind="function"><name>gr</name></member>
    <member refid="segment__tree_8hpp_1a79eb3560607dcadc86816675cb88146e" kind="function"><name>identity</name></member>
  </compound>
  <compound refid="splay__tree_8hpp" kind="file"><name>splay_tree.hpp</name>
    <member refid="splay__tree_8hpp_1a453119e81bfa8f9fc72104639b907497" kind="function"><name>test_splay_tree</name></member>
  </compound>
  <compound refid="string_8hpp" kind="file"><name>string.hpp</name>
    <member refid="string_8hpp_1a856c91a54b4b92ce7969d3ce8aeac3f1" kind="variable"><name>empstr</name></member>
    <member refid="string_8hpp_1ad36260cad14dddb2dd9ecacaa7eae158" kind="function"><name>prefix</name></member>
    <member refid="string_8hpp_1a75acb80dd54dda8d2ae0c24a5d6f7c0c" kind="function"><name>search_all</name></member>
    <member refid="string_8hpp_1ab6c8ca76a6f0b8cc64a2a42b5f37c449" kind="function"><name>operator==</name></member>
    <member refid="string_8hpp_1a172956100bf7aa13ca8ecb1b872826e2" kind="function"><name>operator&lt;</name></member>
    <member refid="string_8hpp_1a426f3aae79af5e0f9bf49f2dc28d3da8" kind="function"><name>search_ra</name></member>
    <member refid="string_8hpp_1a0ca9f9c163492b1f67aecc120f5b5e09" kind="function"><name>test_trie_node</name></member>
  </compound>
  <compound refid="template_8hpp" kind="file"><name>template.hpp</name>
  </compound>
  <compound refid="test_8cpp" kind="file"><name>test.cpp</name>
    <member refid="test_8cpp_1af095a232149097b5605064623a9345ac" kind="function"><name>main2</name></member>
  </compound>
  <compound refid="time_8hpp" kind="file"><name>time.hpp</name>
    <member refid="time_8hpp_1a425b2be37c7d8476b2e1a8c8cf2b9c44" kind="function"><name>bench</name></member>
  </compound>
  <compound refid="treap_8hpp" kind="file"><name>treap.hpp</name>
    <member refid="treap_8hpp_1a75a87b416e4b63590fe320df19d3c513" kind="define"><name>flip</name></member>
    <member refid="treap_8hpp_1a7c3f109eab4e8235dee6ef14bfdf920b" kind="typedef"><name>treap_t</name></member>
    <member refid="treap_8hpp_1a8e26670f57733242dc7312c4072c49b6" kind="function"><name>operator+</name></member>
    <member refid="treap_8hpp_1a650f755f8c99e25e39d93616c8c866df" kind="function"><name>operator&lt;&lt;</name></member>
    <member refid="treap_8hpp_1a88d816c35d3a703c27719dabc1631d79" kind="function"><name>get_data</name></member>
    <member refid="treap_8hpp_1a9321be3a55db4ee924a0e968e12734a2" kind="function"><name>update_data</name></member>
    <member refid="treap_8hpp_1ab4b19e3c8f0a975627a7261ed3e2c29b" kind="function"><name>split</name></member>
    <member refid="treap_8hpp_1a4338e31f2a01e882efc6adf47768c076" kind="function"><name>join</name></member>
    <member refid="treap_8hpp_1ad45b31cb3a5a560af114abfcbce83936" kind="function"><name>insert</name></member>
    <member refid="treap_8hpp_1a14ea768f9d1a656b814be126c0a631c8" kind="function"><name>insert</name></member>
    <member refid="treap_8hpp_1add90798283a022be36a018723badda5b" kind="function"><name>erase</name></member>
    <member refid="treap_8hpp_1a4a94ad7cd8f33ebf044afd6d79a174f8" kind="function"><name>down</name></member>
    <member refid="treap_8hpp_1aff38806a204c6e78d7945e04b556f588" kind="function"><name>split_imp</name></member>
    <member refid="treap_8hpp_1aa2a3eaf4c00318c5a4c9298b83d06003" kind="function"><name>insert_imp</name></member>
    <member refid="treap_8hpp_1a5029123d55b27e0746b8616a6f79eda3" kind="function"><name>erase_imp</name></member>
    <member refid="treap_8hpp_1aa2ab504328f4d744315ec1da21b666f3" kind="function"><name>get_imp</name></member>
    <member refid="treap_8hpp_1a4396c20ba2dc1e8172125ce5a28794e6" kind="function"><name>insert_imp</name></member>
    <member refid="treap_8hpp_1adc9b978577ebe26d5cef50ae4dde2362" kind="function"><name>operator&lt;&lt;</name></member>
    <member refid="treap_8hpp_1ad72c7dcf3afbf183a09f2220922543d5" kind="function"><name>to_array</name></member>
    <member refid="treap_8hpp_1a8627d817d1d1564b415505110432d65d" kind="function"><name>to_array</name></member>
  </compound>
  <compound refid="tree_8hpp" kind="file"><name>tree.hpp</name>
    <member refid="tree_8hpp_1a8f1a8683a6149a8df03b1bf40b7beaa0" kind="variable"><name>sz</name></member>
    <member refid="tree_8hpp_1aee19c8efa379e905568ab1d54bebfe6b" kind="function"><name>lca</name></member>
  </compound>
  <compound refid="utility_8hpp" kind="file"><name>utility.hpp</name>
    <member refid="utility_8hpp_1a76cdb96860b77886867832efcffeeb32" kind="define"><name>lambda</name></member>
    <member refid="utility_8hpp_1a98dc5e985b024363c80f2778a577c51a" kind="typedef"><name>ar_t</name></member>
    <member refid="utility_8hpp_1ab383d789912924c9ccfe84042e73bf06" kind="typedef"><name>default_random_device</name></member>
    <member refid="utility_8hpp_1a9fc68ed025086c5affbd401726bc07b8" kind="variable"><name>reng</name></member>
    <member refid="utility_8hpp_1a5b93ebe953feb9309e59874dee0fdb07" kind="function"><name>maxeq</name></member>
    <member refid="utility_8hpp_1abc6bb3f86a9c2d3083df5636d475b0fd" kind="function"><name>mineq</name></member>
    <member refid="utility_8hpp_1a81e820760e553018a680c8264aa443b4" kind="function"><name>cache</name></member>
    <member refid="utility_8hpp_1a44a45701b2aec7031b9a0592b8fe433b" kind="function"><name>uniq</name></member>
    <member refid="utility_8hpp_1a03511d4859cd518749f66a6af5391f92" kind="function"><name>map_args</name></member>
    <member refid="utility_8hpp_1ad32b8ad96cf96371fe9ad3c397218352" kind="function"><name>prev_less</name></member>
    <member refid="utility_8hpp_1a02462a4216b54e8116b62f164ac15368" kind="function"><name>nx2</name></member>
    <member refid="utility_8hpp_1ae7d7f9d0bbad247488d15de2919cfb9e" kind="function"><name>next_comb</name></member>
  </compound>
  <compound refid="md__home_ram_OmniTemplate_README" kind="page"><name>md__home_ram_OmniTemplate_README</name>
  </compound>
</doxygenindex>
